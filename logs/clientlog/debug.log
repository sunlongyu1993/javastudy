[crazyapi] 2021/01/20 21:56:10   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第2列的值是：123456 
[crazyapi] 2021/01/20 21:59:3   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第2列的值是：123456 
[crazyapi] 2021/01/20 22:00:39   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第2列的值是：123456 
[crazyapi] 2021/01/20 22:01:0   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第2列的值是：123456 
[crazyapi] 2021/01/20 22:01:43   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第2列的值是：123456 
[crazyapi] 2021/01/20 22:02:18   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第2列的值是：123456 
[crazyapi] 2021/01/20 22:02:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第2列的值是：123456 
[crazyapi] 2021/01/20 22:04:6   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第0列的值是：注册成功 
[crazyapi] 2021/01/20 22:04:6   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第1列的值是：sly 
[crazyapi] 2021/01/20 22:04:6   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第2列的值是：123456 
[crazyapi] 2021/01/20 22:04:6   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第3列的值是：username 
[crazyapi] 2021/01/20 22:04:6   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第4列的值是：1 
[crazyapi] 2021/01/20 22:04:6   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第5列的值是：注册成功 
[crazyapi] 2021/01/20 22:04:6   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第0列的值是：用户已存在 
[crazyapi] 2021/01/20 22:04:6   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第1列的值是：sly 
[crazyapi] 2021/01/20 22:04:6   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第2列的值是：123456 
[crazyapi] 2021/01/20 22:04:6   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第3列的值是：username 
[crazyapi] 2021/01/20 22:04:6   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第4列的值是：1 
[crazyapi] 2021/01/20 22:04:6   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第5列的值是：用户名已存在 
[crazyapi] 2021/01/20 22:04:6   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第3行第0列的值是：用户名为空 
[crazyapi] 2021/01/20 22:04:6  ERROR main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:91 - java.lang.NullPointerException 
[crazyapi] 2021/01/20 22:04:6   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第3行第2列的值是：123456 
[crazyapi] 2021/01/20 22:04:6   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第3行第3列的值是：username 
[crazyapi] 2021/01/20 22:04:6   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第3行第4列的值是：1 
[crazyapi] 2021/01/20 22:04:6   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第3行第5列的值是：用户名或密码不能为空 
[crazyapi] 2021/01/20 22:04:6   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第4行第0列的值是：密码为空 
[crazyapi] 2021/01/20 22:04:6   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第4行第1列的值是：sly 
[crazyapi] 2021/01/20 22:04:6  ERROR main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:91 - java.lang.NullPointerException 
[crazyapi] 2021/01/20 22:04:6   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第4行第3列的值是：username 
[crazyapi] 2021/01/20 22:04:6   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第4行第4列的值是：1 
[crazyapi] 2021/01/20 22:04:6   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第4行第5列的值是：用户名或密码不能为空 
[crazyapi] 2021/01/20 22:04:6   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第5行第0列的值是：密码位数不足6位 
[crazyapi] 2021/01/20 22:04:6   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第5行第1列的值是：sly 
[crazyapi] 2021/01/20 22:04:6   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第5行第2列的值是：12345 
[crazyapi] 2021/01/20 22:04:6   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第5行第3列的值是：username 
[crazyapi] 2021/01/20 22:04:6   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第5行第4列的值是：1 
[crazyapi] 2021/01/20 22:04:6   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第5行第5列的值是：用户密码长度不够 
[crazyapi] 2021/01/20 22:04:41   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第0列的值是：注册成功 
[crazyapi] 2021/01/20 22:04:41   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第1列的值是：sly 
[crazyapi] 2021/01/20 22:04:41   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第2列的值是：123456 
[crazyapi] 2021/01/20 22:04:41   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第3列的值是：username 
[crazyapi] 2021/01/20 22:04:41   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第4列的值是：1 
[crazyapi] 2021/01/20 22:04:41   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第5列的值是：注册成功 
[crazyapi] 2021/01/20 22:04:41   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第0列的值是：用户已存在 
[crazyapi] 2021/01/20 22:04:41   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第1列的值是：sly 
[crazyapi] 2021/01/20 22:04:41   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第2列的值是：123456 
[crazyapi] 2021/01/20 22:04:41   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第3列的值是：username 
[crazyapi] 2021/01/20 22:04:41   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第4列的值是：1 
[crazyapi] 2021/01/20 22:04:41   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第5列的值是：用户名已存在 
[crazyapi] 2021/01/20 22:04:41   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第3行第0列的值是：用户名为空 
[crazyapi] 2021/01/20 22:04:41  ERROR main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:91 - java.lang.NullPointerException 
[crazyapi] 2021/01/20 22:04:41   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第3行第2列的值是：123456 
[crazyapi] 2021/01/20 22:04:41   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第3行第3列的值是：username 
[crazyapi] 2021/01/20 22:04:41   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第3行第4列的值是：1 
[crazyapi] 2021/01/20 22:04:41   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第3行第5列的值是：用户名或密码不能为空 
[crazyapi] 2021/01/20 22:04:41   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第4行第0列的值是：密码为空 
[crazyapi] 2021/01/20 22:04:41   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第4行第1列的值是：sly 
[crazyapi] 2021/01/20 22:04:41  ERROR main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:91 - java.lang.NullPointerException 
[crazyapi] 2021/01/20 22:04:41   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第4行第3列的值是：username 
[crazyapi] 2021/01/20 22:04:41   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第4行第4列的值是：1 
[crazyapi] 2021/01/20 22:04:41   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第4行第5列的值是：用户名或密码不能为空 
[crazyapi] 2021/01/20 22:04:41   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第5行第0列的值是：密码位数不足6位 
[crazyapi] 2021/01/20 22:04:41   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第5行第1列的值是：sly 
[crazyapi] 2021/01/20 22:04:41   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第5行第2列的值是：12345 
[crazyapi] 2021/01/20 22:04:41   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第5行第3列的值是：username 
[crazyapi] 2021/01/20 22:04:41   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第5行第4列的值是：1 
[crazyapi] 2021/01/20 22:04:41   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第5行第5列的值是：用户密码长度不够 
[crazyapi] 2021/01/20 22:05:1   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第0列的值是：注册成功 
[crazyapi] 2021/01/20 22:05:1   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第1列的值是：sly 
[crazyapi] 2021/01/20 22:05:1   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第2列的值是：123456 
[crazyapi] 2021/01/20 22:05:1   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第3列的值是：username 
[crazyapi] 2021/01/20 22:05:1   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第4列的值是：1 
[crazyapi] 2021/01/20 22:05:1   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第5列的值是：注册成功 
[crazyapi] 2021/01/20 22:05:1   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第0列的值是：用户已存在 
[crazyapi] 2021/01/20 22:05:1   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第1列的值是：sly 
[crazyapi] 2021/01/20 22:05:1   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第2列的值是：123456 
[crazyapi] 2021/01/20 22:05:1   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第3列的值是：username 
[crazyapi] 2021/01/20 22:05:1   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第4列的值是：1 
[crazyapi] 2021/01/20 22:05:1   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第5列的值是：用户名已存在 
[crazyapi] 2021/01/20 22:05:1   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第3行第0列的值是：用户名为空 
[crazyapi] 2021/01/20 22:05:1  ERROR main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:91 - java.lang.NullPointerException 
[crazyapi] 2021/01/20 22:05:1   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第3行第2列的值是：123456 
[crazyapi] 2021/01/20 22:05:1   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第3行第3列的值是：username 
[crazyapi] 2021/01/20 22:05:1   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第3行第4列的值是：1 
[crazyapi] 2021/01/20 22:05:1   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第3行第5列的值是：用户名或密码不能为空 
[crazyapi] 2021/01/20 22:05:1   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第4行第0列的值是：密码为空 
[crazyapi] 2021/01/20 22:05:1   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第4行第1列的值是：sly 
[crazyapi] 2021/01/20 22:05:1  ERROR main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:91 - java.lang.NullPointerException 
[crazyapi] 2021/01/20 22:05:1   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第4行第3列的值是：username 
[crazyapi] 2021/01/20 22:05:1   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第4行第4列的值是：1 
[crazyapi] 2021/01/20 22:05:1   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第4行第5列的值是：用户名或密码不能为空 
[crazyapi] 2021/01/20 22:05:1   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第5行第0列的值是：密码位数不足6位 
[crazyapi] 2021/01/20 22:05:1   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第5行第1列的值是：sly 
[crazyapi] 2021/01/20 22:05:1   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第5行第2列的值是：12345 
[crazyapi] 2021/01/20 22:05:1   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第5行第3列的值是：username 
[crazyapi] 2021/01/20 22:05:1   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第5行第4列的值是：1 
[crazyapi] 2021/01/20 22:05:1   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第5行第5列的值是：用户密码长度不够 
[crazyapi] 2021/01/20 22:30:53   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第0列的值是：注册成功 
[crazyapi] 2021/01/20 22:30:53   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第1列的值是：sly123 
[crazyapi] 2021/01/20 22:30:53   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第2列的值是：123456 
[crazyapi] 2021/01/20 22:30:53   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第3列的值是：username 
[crazyapi] 2021/01/20 22:30:53   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第4列的值是：1 
[crazyapi] 2021/01/20 22:30:53   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第5列的值是：注册成功 
[crazyapi] 2021/01/20 22:30:53   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第0列的值是：用户已存在 
[crazyapi] 2021/01/20 22:30:53   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第1列的值是：sly123 
[crazyapi] 2021/01/20 22:30:53   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第2列的值是：123456 
[crazyapi] 2021/01/20 22:30:53   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第3列的值是：username 
[crazyapi] 2021/01/20 22:30:53   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第4列的值是：1 
[crazyapi] 2021/01/20 22:30:53   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第5列的值是：账号已存在 
[crazyapi] 2021/01/20 22:30:53   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第3行第0列的值是：用户名为空 
[crazyapi] 2021/01/20 22:30:53  ERROR main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:91 - java.lang.NullPointerException 
[crazyapi] 2021/01/20 22:30:53   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第3行第2列的值是：123456 
[crazyapi] 2021/01/20 22:30:53   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第3行第3列的值是：username 
[crazyapi] 2021/01/20 22:30:53   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第3行第4列的值是：1 
[crazyapi] 2021/01/20 22:30:53   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第3行第5列的值是：账号不能为空 
[crazyapi] 2021/01/20 22:30:53   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第4行第0列的值是：密码为空 
[crazyapi] 2021/01/20 22:30:53   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第4行第1列的值是：sly 
[crazyapi] 2021/01/20 22:30:53  ERROR main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:91 - java.lang.NullPointerException 
[crazyapi] 2021/01/20 22:30:53   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第4行第3列的值是：username 
[crazyapi] 2021/01/20 22:30:53   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第4行第4列的值是：1 
[crazyapi] 2021/01/20 22:30:53   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第4行第5列的值是：密码不能为空 
[crazyapi] 2021/01/20 22:31:38   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第0列的值是：注册成功 
[crazyapi] 2021/01/20 22:31:38   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第1列的值是：sly123 
[crazyapi] 2021/01/20 22:31:38   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第2列的值是：123456 
[crazyapi] 2021/01/20 22:31:38   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第3列的值是：username 
[crazyapi] 2021/01/20 22:31:38   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第4列的值是：1 
[crazyapi] 2021/01/20 22:31:38   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第5列的值是：注册成功 
[crazyapi] 2021/01/20 22:31:38   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第0列的值是：用户已存在 
[crazyapi] 2021/01/20 22:31:38   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第1列的值是：sly123 
[crazyapi] 2021/01/20 22:31:38   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第2列的值是：123456 
[crazyapi] 2021/01/20 22:31:38   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第3列的值是：username 
[crazyapi] 2021/01/20 22:31:38   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第4列的值是：1 
[crazyapi] 2021/01/20 22:31:38   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第5列的值是：账号已存在 
[crazyapi] 2021/01/20 22:31:38   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第3行第0列的值是：用户名为空 
[crazyapi] 2021/01/20 22:31:38  ERROR main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:91 - java.lang.NullPointerException 
[crazyapi] 2021/01/20 22:31:38   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第3行第2列的值是：123456 
[crazyapi] 2021/01/20 22:31:38   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第3行第3列的值是：username 
[crazyapi] 2021/01/20 22:31:38   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第3行第4列的值是：1 
[crazyapi] 2021/01/20 22:31:38   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第3行第5列的值是：账号不能为空 
[crazyapi] 2021/01/20 22:31:38   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第4行第0列的值是：密码为空 
[crazyapi] 2021/01/20 22:31:38   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第4行第1列的值是：sly 
[crazyapi] 2021/01/20 22:31:38  ERROR main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:91 - java.lang.NullPointerException 
[crazyapi] 2021/01/20 22:31:38   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第4行第3列的值是：username 
[crazyapi] 2021/01/20 22:31:38   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第4行第4列的值是：1 
[crazyapi] 2021/01/20 22:31:38   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第4行第5列的值是：密码不能为空 
[crazyapi] 2021/01/20 22:32:52   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第0列的值是：注册成功 
[crazyapi] 2021/01/20 22:32:52   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第1列的值是：sly1234 
[crazyapi] 2021/01/20 22:32:52   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第2列的值是：123456 
[crazyapi] 2021/01/20 22:32:52   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第3列的值是：username 
[crazyapi] 2021/01/20 22:32:52   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第4列的值是：1 
[crazyapi] 2021/01/20 22:32:52   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第5列的值是：注册成功 
[crazyapi] 2021/01/20 22:32:52   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第0列的值是：用户已存在 
[crazyapi] 2021/01/20 22:32:52   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第1列的值是：sly1234 
[crazyapi] 2021/01/20 22:32:52   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第2列的值是：123456 
[crazyapi] 2021/01/20 22:32:52   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第3列的值是：username 
[crazyapi] 2021/01/20 22:32:52   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第4列的值是：1 
[crazyapi] 2021/01/20 22:32:52   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第5列的值是：账号已存在 
[crazyapi] 2021/01/20 22:32:52   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第3行第0列的值是：用户名为空 
[crazyapi] 2021/01/20 22:32:52  ERROR main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:91 - java.lang.NullPointerException 
[crazyapi] 2021/01/20 22:32:52   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第3行第2列的值是：123456 
[crazyapi] 2021/01/20 22:32:52   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第3行第3列的值是：username 
[crazyapi] 2021/01/20 22:32:52   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第3行第4列的值是：1 
[crazyapi] 2021/01/20 22:32:52   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第3行第5列的值是：账号不能为空 
[crazyapi] 2021/01/20 22:32:52   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第4行第0列的值是：密码为空 
[crazyapi] 2021/01/20 22:32:52   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第4行第1列的值是：sly 
[crazyapi] 2021/01/20 22:32:52  ERROR main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:91 - java.lang.NullPointerException 
[crazyapi] 2021/01/20 22:32:52   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第4行第3列的值是：username 
[crazyapi] 2021/01/20 22:32:52   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第4行第4列的值是：1 
[crazyapi] 2021/01/20 22:32:52   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第4行第5列的值是：密码不能为空 
[crazyapi] 2021/01/25 14:10:15   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第1行第0列的值是：创建客户-正确 
[crazyapi] 2021/01/25 14:10:15   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第1行第1列的值是：创建客户 
[crazyapi] 2021/01/25 14:10:15   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第1行第2列的值是：/CrmCustomer/addOrUpdate 
[crazyapi] 2021/01/25 14:10:15   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第1行第3列的值是：POST 
[crazyapi] 2021/01/25 14:10:15   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第1行第4列的值是：{
"Admin-Token":"token"
} 
[crazyapi] 2021/01/25 14:10:15   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第1行第5列的值是：{
 "entity": {
  "customer_name": "shamo123",
  "mobile": "18991112345",
  "telephone": "01028375678",
  "website": "http://testfan.cn",
  "next_time": "2020-04-02 00:00:00",
  "remark": "这是备注",
  "address": "北京市,北京城区,昌平区",
  "detailAddress": "霍营地铁",
  "location": "",
  "lng": "",
  "lat": ""
 }
} 
[crazyapi] 2021/01/25 14:10:15   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第1行第6列的值是：{
"code":0
} 
[crazyapi] 2021/01/25 14:10:15   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第2行第0列的值是：创建客户-客户名称为空 
[crazyapi] 2021/01/25 14:10:15   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第2行第1列的值是：创建客户 
[crazyapi] 2021/01/25 14:10:15   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第2行第2列的值是：/CrmCustomer/addOrUpdate 
[crazyapi] 2021/01/25 14:10:15   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第2行第3列的值是：POST 
[crazyapi] 2021/01/25 14:10:15   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第2行第4列的值是：{
"Admin-Token":"token"
} 
[crazyapi] 2021/01/25 14:10:15   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第2行第5列的值是：{
 "entity": {
  "customer_name": "",
  "mobile": "18991112345",
  "telephone": "01028375678",
  "website": "http://testfan.cn",
  "next_time": "2020-04-02 00:00:00",
  "remark": "这是备注",
  "address": "北京市,北京城区,昌平区",
  "detailAddress": "霍营地铁",
  "location": "",
  "lng": "",
  "lat": ""
 }
} 
[crazyapi] 2021/01/25 14:10:15   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第2行第6列的值是：{
"code":0,
"msg":"客户名称不能为空"
} 
[crazyapi] 2021/01/25 14:10:15   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第3行第0列的值是：创建联系人-正确 
[crazyapi] 2021/01/25 14:10:15   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第3行第1列的值是：创建联系人 
[crazyapi] 2021/01/25 14:10:15   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第3行第2列的值是：/CrmContacts/addOrUpdate 
[crazyapi] 2021/01/25 14:10:15   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第3行第3列的值是：POST 
[crazyapi] 2021/01/25 14:10:15   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第3行第4列的值是：{
"Admin-Token":"token"
} 
[crazyapi] 2021/01/25 14:10:15   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第3行第5列的值是：{
 "entity": {
  "name": "沙漠",
  "customer_id": 5,
  "mobile": "18098909090",
  "telephone": "01023456789",
  "email": "shddhdd@163.com",
  "post": "总经理",
  "address": "北京霍营",
  "next_time": "2020-04-23 16:03:47",
  "remark": "这是备注"
 }
}
 
[crazyapi] 2021/01/25 14:10:15   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第3行第6列的值是：{
"code":0
} 
[crazyapi] 2021/01/25 14:10:15   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第4行第0列的值是：创建联系人-客户不存在 
[crazyapi] 2021/01/25 14:10:15   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第4行第1列的值是：创建联系人 
[crazyapi] 2021/01/25 14:10:15   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第4行第2列的值是：/CrmContacts/addOrUpdate 
[crazyapi] 2021/01/25 14:10:15   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第4行第3列的值是：POST 
[crazyapi] 2021/01/25 14:10:15   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第4行第4列的值是：{
"Admin-Token":"token"
} 
[crazyapi] 2021/01/25 14:10:15   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第4行第5列的值是：{
 "entity": {
  "name": "沙漠",
  "customer_id": 237466,
  "mobile": "18098909090",
  "telephone": "01023456789",
  "email": "shddhdd@163.com",
  "post": "总经理",
  "address": "北京霍营",
  "next_time": "2020-04-23 16:03:47",
  "remark": "这是备注"
 }
}
 
[crazyapi] 2021/01/25 14:10:15   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第4行第6列的值是：{
"code":0,
"msg":"客户不存在"
} 
[crazyapi] 2021/01/25 15:06:25   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第1行第0列的值是：创建客户-正确 
[crazyapi] 2021/01/25 15:06:25   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第1行第1列的值是：创建客户 
[crazyapi] 2021/01/25 15:06:25   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第1行第2列的值是：/CrmCustomer/addOrUpdate 
[crazyapi] 2021/01/25 15:06:25   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第1行第3列的值是：POST 
[crazyapi] 2021/01/25 15:06:25   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第1行第4列的值是：{
"Admin-Token":"token"
} 
[crazyapi] 2021/01/25 15:06:25   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第1行第5列的值是：{
 "entity": {
  "customer_name": "shamo123",
  "mobile": "18991112345",
  "telephone": "01028375678",
  "website": "http://testfan.cn",
  "next_time": "2020-04-02 00:00:00",
  "remark": "这是备注",
  "address": "北京市,北京城区,昌平区",
  "detailAddress": "霍营地铁",
  "location": "",
  "lng": "",
  "lat": ""
 }
} 
[crazyapi] 2021/01/25 15:06:25   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第1行第6列的值是：{
"code":0
} 
[crazyapi] 2021/01/25 15:06:25   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第2行第0列的值是：创建客户-客户名称为空 
[crazyapi] 2021/01/25 15:06:25   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第2行第1列的值是：创建客户 
[crazyapi] 2021/01/25 15:06:25   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第2行第2列的值是：/CrmCustomer/addOrUpdate 
[crazyapi] 2021/01/25 15:06:25   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第2行第3列的值是：POST 
[crazyapi] 2021/01/25 15:06:25   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第2行第4列的值是：{
"Admin-Token":"token"
} 
[crazyapi] 2021/01/25 15:06:25   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第2行第5列的值是：{
 "entity": {
  "customer_name": "",
  "mobile": "18991112345",
  "telephone": "01028375678",
  "website": "http://testfan.cn",
  "next_time": "2020-04-02 00:00:00",
  "remark": "这是备注",
  "address": "北京市,北京城区,昌平区",
  "detailAddress": "霍营地铁",
  "location": "",
  "lng": "",
  "lat": ""
 }
} 
[crazyapi] 2021/01/25 15:06:25   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第2行第6列的值是：{
"code":0,
"msg":"客户名称不能为空"
} 
[crazyapi] 2021/01/25 15:06:25   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第3行第0列的值是：创建联系人-正确 
[crazyapi] 2021/01/25 15:06:25   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第3行第1列的值是：创建联系人 
[crazyapi] 2021/01/25 15:06:25   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第3行第2列的值是：/CrmContacts/addOrUpdate 
[crazyapi] 2021/01/25 15:06:25   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第3行第3列的值是：POST 
[crazyapi] 2021/01/25 15:06:25   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第3行第4列的值是：{
"Admin-Token":"token"
} 
[crazyapi] 2021/01/25 15:06:25   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第3行第5列的值是：{
 "entity": {
  "name": "沙漠",
  "customer_id": 5,
  "mobile": "18098909090",
  "telephone": "01023456789",
  "email": "shddhdd@163.com",
  "post": "总经理",
  "address": "北京霍营",
  "next_time": "2020-04-23 16:03:47",
  "remark": "这是备注"
 }
}
 
[crazyapi] 2021/01/25 15:06:25   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第3行第6列的值是：{
"code":0
} 
[crazyapi] 2021/01/25 15:06:25   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第4行第0列的值是：创建联系人-客户不存在 
[crazyapi] 2021/01/25 15:06:25   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第4行第1列的值是：创建联系人 
[crazyapi] 2021/01/25 15:06:25   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第4行第2列的值是：/CrmContacts/addOrUpdate 
[crazyapi] 2021/01/25 15:06:25   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第4行第3列的值是：POST 
[crazyapi] 2021/01/25 15:06:25   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第4行第4列的值是：{
"Admin-Token":"token"
} 
[crazyapi] 2021/01/25 15:06:25   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第4行第5列的值是：{
 "entity": {
  "name": "沙漠",
  "customer_id": 237466,
  "mobile": "18098909090",
  "telephone": "01023456789",
  "email": "shddhdd@163.com",
  "post": "总经理",
  "address": "北京霍营",
  "next_time": "2020-04-23 16:03:47",
  "remark": "这是备注"
 }
}
 
[crazyapi] 2021/01/25 15:06:25   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第4行第6列的值是：{
"code":0,
"msg":"客户不存在"
} 
[crazyapi] 2021/01/25 15:14:4   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第1行第0列的值是：创建客户-正确 
[crazyapi] 2021/01/25 15:14:4   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第1行第1列的值是：创建客户 
[crazyapi] 2021/01/25 15:14:4   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第1行第2列的值是：/CrmCustomer/addOrUpdate 
[crazyapi] 2021/01/25 15:14:4   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第1行第3列的值是：POST 
[crazyapi] 2021/01/25 15:14:4   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第1行第4列的值是：{
"Admin-Token":"token"
} 
[crazyapi] 2021/01/25 15:14:4   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第1行第5列的值是：{
 "entity": {
  "customer_name": "shamo123",
  "mobile": "18991112345",
  "telephone": "01028375678",
  "website": "http://testfan.cn",
  "next_time": "2020-04-02 00:00:00",
  "remark": "这是备注",
  "address": "北京市,北京城区,昌平区",
  "detailAddress": "霍营地铁",
  "location": "",
  "lng": "",
  "lat": ""
 }
} 
[crazyapi] 2021/01/25 15:14:4   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第1行第6列的值是：{
"code":0
} 
[crazyapi] 2021/01/25 15:14:4   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第2行第0列的值是：创建客户-客户名称为空 
[crazyapi] 2021/01/25 15:14:4   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第2行第1列的值是：创建客户 
[crazyapi] 2021/01/25 15:14:4   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第2行第2列的值是：/CrmCustomer/addOrUpdate 
[crazyapi] 2021/01/25 15:14:4   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第2行第3列的值是：POST 
[crazyapi] 2021/01/25 15:14:4   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第2行第4列的值是：{
"Admin-Token":"token"
} 
[crazyapi] 2021/01/25 15:14:4   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第2行第5列的值是：{
 "entity": {
  "customer_name": "",
  "mobile": "18991112345",
  "telephone": "01028375678",
  "website": "http://testfan.cn",
  "next_time": "2020-04-02 00:00:00",
  "remark": "这是备注",
  "address": "北京市,北京城区,昌平区",
  "detailAddress": "霍营地铁",
  "location": "",
  "lng": "",
  "lat": ""
 }
} 
[crazyapi] 2021/01/25 15:14:4   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第2行第6列的值是：{
"code":0,
"msg":"客户名称不能为空"
} 
[crazyapi] 2021/01/25 15:14:4   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第3行第0列的值是：创建联系人-正确 
[crazyapi] 2021/01/25 15:14:4   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第3行第1列的值是：创建联系人 
[crazyapi] 2021/01/25 15:14:4   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第3行第2列的值是：/CrmContacts/addOrUpdate 
[crazyapi] 2021/01/25 15:14:4   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第3行第3列的值是：POST 
[crazyapi] 2021/01/25 15:14:4   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第3行第4列的值是：{
"Admin-Token":"token"
} 
[crazyapi] 2021/01/25 15:14:4   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第3行第5列的值是：{
 "entity": {
  "name": "沙漠",
  "customer_id": 5,
  "mobile": "18098909090",
  "telephone": "01023456789",
  "email": "shddhdd@163.com",
  "post": "总经理",
  "address": "北京霍营",
  "next_time": "2020-04-23 16:03:47",
  "remark": "这是备注"
 }
}
 
[crazyapi] 2021/01/25 15:14:4   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第3行第6列的值是：{
"code":0
} 
[crazyapi] 2021/01/25 15:14:4   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第4行第0列的值是：创建联系人-客户不存在 
[crazyapi] 2021/01/25 15:14:4   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第4行第1列的值是：创建联系人 
[crazyapi] 2021/01/25 15:14:4   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第4行第2列的值是：/CrmContacts/addOrUpdate 
[crazyapi] 2021/01/25 15:14:4   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第4行第3列的值是：POST 
[crazyapi] 2021/01/25 15:14:4   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第4行第4列的值是：{
"Admin-Token":"token"
} 
[crazyapi] 2021/01/25 15:14:4   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第4行第5列的值是：{
 "entity": {
  "name": "沙漠",
  "customer_id": 237466,
  "mobile": "18098909090",
  "telephone": "01023456789",
  "email": "shddhdd@163.com",
  "post": "总经理",
  "address": "北京霍营",
  "next_time": "2020-04-23 16:03:47",
  "remark": "这是备注"
 }
}
 
[crazyapi] 2021/01/25 15:14:4   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第4行第6列的值是：{
"code":0,
"msg":"客户不存在"
} 
[crazyapi] 2021/01/27 20:59:36   INFO main com.alibaba.dubbo.common.logger.LoggerFactory:? - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter 
[crazyapi] 2021/01/27 20:59:36  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 20:59:36   WARN main com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory:75 -  [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 20:59:36   WARN main com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory:93 -  [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 20:59:36  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 20:59:36  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 20:59:36  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 20:59:37  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 20:59:37  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 20:59:37   INFO main com.alibaba.dubbo.remoting.transport.AbstractClient:289 -  [DUBBO] Successed connect to server /192.168.23.135:20880 from NettyClient 10.18.224.236 using dubbo version 2.6.9, channel is NettyChannel [channel=[id: 0xa815fe78, L:/192.168.23.1:58364 - R:/192.168.23.135:20880]], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 20:59:37   INFO main com.alibaba.dubbo.remoting.transport.AbstractClient:94 -  [DUBBO] Start NettyClient 5CG026B3WF/10.18.224.236 connect to the server /192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 20:59:37  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 20:59:37  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 20:59:37  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 20:59:37   INFO main com.alibaba.dubbo.config.AbstractConfig:429 -  [DUBBO] Refer dubbo service com.alibaba.dubbo.rpc.service.GenericService from url dubbo://192.168.23.135:20880/cn.testfan.dubbo.service.MarketService?application=test&dubbo=2.0.2&generic=true&interface=/cn.testfan.dubbo.service.MarketService&pid=36868&register.ip=10.18.224.236&side=consumer&timeout=20000&timestamp=1611752376444&version=1.0, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 20:59:38  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 20:59:38   INFO DubboShutdownHook com.alibaba.dubbo.config.DubboShutdownHook:56 -  [DUBBO] Run shutdown hook now., dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 20:59:38   INFO DubboShutdownHook com.alibaba.dubbo.registry.support.AbstractRegistryFactory:64 -  [DUBBO] Close all registries [], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 20:59:38   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:446 -  [DUBBO] Close dubbo connect: /192.168.23.1:58364-->/192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 20:59:38   INFO DubboShutdownHook com.alibaba.dubbo.remoting.transport.netty4.NettyChannel:139 -  [DUBBO] Close netty channel [id: 0xa815fe78, L:/192.168.23.1:58364 - R:/192.168.23.135:20880], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 20:59:38   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:460 -  [DUBBO] Close dubbo connect: 10.18.224.236:0-->192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 20:59:38   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:63 -  [DUBBO] Destroy reference: dubbo://192.168.23.135:20880/cn.testfan.dubbo.service.MarketService?application=test&dubbo=2.0.2&generic=true&interface=/cn.testfan.dubbo.service.MarketService&pid=36868&register.ip=10.18.224.236&side=consumer&timeout=20000&timestamp=1611752376444&version=1.0, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:01:46   INFO main com.alibaba.dubbo.common.logger.LoggerFactory:? - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter 
[crazyapi] 2021/01/27 21:01:46  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:01:46   WARN main com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory:75 -  [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:01:46   WARN main com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory:93 -  [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:01:46  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:01:46  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:01:46  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:01:47  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:01:47  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:01:48   INFO main com.alibaba.dubbo.remoting.transport.AbstractClient:289 -  [DUBBO] Successed connect to server /192.168.23.135:20880 from NettyClient 10.18.224.236 using dubbo version 2.6.9, channel is NettyChannel [channel=[id: 0x2f06b581, L:/192.168.23.1:58499 - R:/192.168.23.135:20880]], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:01:48   INFO main com.alibaba.dubbo.remoting.transport.AbstractClient:94 -  [DUBBO] Start NettyClient 5CG026B3WF/10.18.224.236 connect to the server /192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:01:48  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:01:48  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:01:48  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:01:48   INFO main com.alibaba.dubbo.config.AbstractConfig:429 -  [DUBBO] Refer dubbo service com.alibaba.dubbo.rpc.service.GenericService from url dubbo://192.168.23.135:20880/cn.testfan.dubbo.service.MarketService?application=test&dubbo=2.0.2&generic=true&interface=/cn.testfan.dubbo.service.MarketService&pid=30368&register.ip=10.18.224.236&side=consumer&timeout=20000&timestamp=1611752506710&version=1.0, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:01:48  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:01:49   INFO DubboShutdownHook com.alibaba.dubbo.config.DubboShutdownHook:56 -  [DUBBO] Run shutdown hook now., dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:01:49   INFO DubboShutdownHook com.alibaba.dubbo.registry.support.AbstractRegistryFactory:64 -  [DUBBO] Close all registries [], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:01:49   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:446 -  [DUBBO] Close dubbo connect: /192.168.23.1:58499-->/192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:01:49   INFO DubboShutdownHook com.alibaba.dubbo.remoting.transport.netty4.NettyChannel:139 -  [DUBBO] Close netty channel [id: 0x2f06b581, L:/192.168.23.1:58499 - R:/192.168.23.135:20880], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:01:49   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:460 -  [DUBBO] Close dubbo connect: 10.18.224.236:0-->192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:01:49   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:63 -  [DUBBO] Destroy reference: dubbo://192.168.23.135:20880/cn.testfan.dubbo.service.MarketService?application=test&dubbo=2.0.2&generic=true&interface=/cn.testfan.dubbo.service.MarketService&pid=30368&register.ip=10.18.224.236&side=consumer&timeout=20000&timestamp=1611752506710&version=1.0, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:07:13   INFO main com.alibaba.dubbo.common.logger.LoggerFactory:? - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter 
[crazyapi] 2021/01/27 21:07:13  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:07:13   WARN main com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory:75 -  [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:07:13   WARN main com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory:93 -  [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:07:13  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:07:13  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:07:13  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:07:14  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:07:14  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:07:14   INFO main com.alibaba.dubbo.remoting.transport.AbstractClient:289 -  [DUBBO] Successed connect to server /192.168.23.135:20880 from NettyClient 10.18.224.236 using dubbo version 2.6.9, channel is NettyChannel [channel=[id: 0xdde5eb05, L:/192.168.23.1:58736 - R:/192.168.23.135:20880]], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:07:14   INFO main com.alibaba.dubbo.remoting.transport.AbstractClient:94 -  [DUBBO] Start NettyClient 5CG026B3WF/10.18.224.236 connect to the server /192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:07:14  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:07:14  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:07:14  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:07:14   INFO main com.alibaba.dubbo.config.AbstractConfig:429 -  [DUBBO] Refer dubbo service com.alibaba.dubbo.rpc.service.GenericService from url dubbo://192.168.23.135:20880/cn.testfan.dubbo.service.MarketService?application=test&dubbo=2.0.2&generic=true&interface=/cn.testfan.dubbo.service.MarketService&pid=34324&register.ip=10.18.224.236&side=consumer&timeout=20000&timestamp=1611752833685&version=1.0, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:07:15  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:07:15   INFO DubboShutdownHook com.alibaba.dubbo.config.DubboShutdownHook:56 -  [DUBBO] Run shutdown hook now., dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:07:15   INFO DubboShutdownHook com.alibaba.dubbo.registry.support.AbstractRegistryFactory:64 -  [DUBBO] Close all registries [], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:07:15   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:446 -  [DUBBO] Close dubbo connect: /192.168.23.1:58736-->/192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:07:15   INFO DubboShutdownHook com.alibaba.dubbo.remoting.transport.netty4.NettyChannel:139 -  [DUBBO] Close netty channel [id: 0xdde5eb05, L:/192.168.23.1:58736 - R:/192.168.23.135:20880], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:07:15   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:460 -  [DUBBO] Close dubbo connect: 10.18.224.236:0-->192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:07:15   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:63 -  [DUBBO] Destroy reference: dubbo://192.168.23.135:20880/cn.testfan.dubbo.service.MarketService?application=test&dubbo=2.0.2&generic=true&interface=/cn.testfan.dubbo.service.MarketService&pid=34324&register.ip=10.18.224.236&side=consumer&timeout=20000&timestamp=1611752833685&version=1.0, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:10:30   INFO main com.alibaba.dubbo.common.logger.LoggerFactory:? - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter 
[crazyapi] 2021/01/27 21:10:30  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:10:30   WARN main com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory:75 -  [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:10:30   WARN main com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory:93 -  [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:10:30  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:10:30  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:10:31  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:10:31  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:10:31  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:10:32   INFO main com.alibaba.dubbo.remoting.transport.AbstractClient:289 -  [DUBBO] Successed connect to server /192.168.23.135:20880 from NettyClient 10.18.224.236 using dubbo version 2.6.9, channel is NettyChannel [channel=[id: 0x0c40d8fe, L:/192.168.23.1:58900 - R:/192.168.23.135:20880]], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:10:32   INFO main com.alibaba.dubbo.remoting.transport.AbstractClient:94 -  [DUBBO] Start NettyClient 5CG026B3WF/10.18.224.236 connect to the server /192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:10:32  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:10:32  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:10:32  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:10:32   INFO main com.alibaba.dubbo.config.AbstractConfig:429 -  [DUBBO] Refer dubbo service com.alibaba.dubbo.rpc.service.GenericService from url dubbo://192.168.23.135:20880/cn.testfan.dubbo.service.MarketService?application=test&dubbo=2.0.2&generic=true&interface=/cn.testfan.dubbo.service.MarketService&pid=40636&register.ip=10.18.224.236&side=consumer&timeout=20000&timestamp=1611753030966&version=1.0, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:10:32  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:10:32   INFO DubboShutdownHook com.alibaba.dubbo.config.DubboShutdownHook:56 -  [DUBBO] Run shutdown hook now., dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:10:32   INFO DubboShutdownHook com.alibaba.dubbo.registry.support.AbstractRegistryFactory:64 -  [DUBBO] Close all registries [], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:10:32   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:446 -  [DUBBO] Close dubbo connect: /192.168.23.1:58900-->/192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:10:32   INFO DubboShutdownHook com.alibaba.dubbo.remoting.transport.netty4.NettyChannel:139 -  [DUBBO] Close netty channel [id: 0x0c40d8fe, L:/192.168.23.1:58900 - R:/192.168.23.135:20880], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:10:32   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:460 -  [DUBBO] Close dubbo connect: 10.18.224.236:0-->192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:10:32   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:63 -  [DUBBO] Destroy reference: dubbo://192.168.23.135:20880/cn.testfan.dubbo.service.MarketService?application=test&dubbo=2.0.2&generic=true&interface=/cn.testfan.dubbo.service.MarketService&pid=40636&register.ip=10.18.224.236&side=consumer&timeout=20000&timestamp=1611753030966&version=1.0, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:11:8   INFO main com.alibaba.dubbo.common.logger.LoggerFactory:? - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter 
[crazyapi] 2021/01/27 21:11:8  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:11:8   WARN main com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory:75 -  [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:11:8   WARN main com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory:93 -  [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:11:8  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:11:8  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:11:8  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:11:9  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:11:9  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:11:10   INFO main com.alibaba.dubbo.remoting.transport.AbstractClient:289 -  [DUBBO] Successed connect to server /192.168.23.135:20880 from NettyClient 10.18.224.236 using dubbo version 2.6.9, channel is NettyChannel [channel=[id: 0x0134ddb2, L:/192.168.23.1:58950 - R:/192.168.23.135:20880]], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:11:10   INFO main com.alibaba.dubbo.remoting.transport.AbstractClient:94 -  [DUBBO] Start NettyClient 5CG026B3WF/10.18.224.236 connect to the server /192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:11:10  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:11:10  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:11:10  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:11:10   INFO main com.alibaba.dubbo.config.AbstractConfig:429 -  [DUBBO] Refer dubbo service com.alibaba.dubbo.rpc.service.GenericService from url dubbo://192.168.23.135:20880/cn.testfan.dubbo.service.MarketService?application=test&dubbo=2.0.2&generic=true&interface=/cn.testfan.dubbo.service.MarketService&pid=28768&register.ip=10.18.224.236&side=consumer&timeout=20000&timestamp=1611753068903&version=1.0, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:11:10  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:11:10   INFO DubboShutdownHook com.alibaba.dubbo.config.DubboShutdownHook:56 -  [DUBBO] Run shutdown hook now., dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:11:10   INFO DubboShutdownHook com.alibaba.dubbo.registry.support.AbstractRegistryFactory:64 -  [DUBBO] Close all registries [], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:11:10   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:446 -  [DUBBO] Close dubbo connect: /192.168.23.1:58950-->/192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:11:10   INFO DubboShutdownHook com.alibaba.dubbo.remoting.transport.netty4.NettyChannel:139 -  [DUBBO] Close netty channel [id: 0x0134ddb2, L:/192.168.23.1:58950 - R:/192.168.23.135:20880], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:11:10   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:460 -  [DUBBO] Close dubbo connect: 10.18.224.236:0-->192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:11:10   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:63 -  [DUBBO] Destroy reference: dubbo://192.168.23.135:20880/cn.testfan.dubbo.service.MarketService?application=test&dubbo=2.0.2&generic=true&interface=/cn.testfan.dubbo.service.MarketService&pid=28768&register.ip=10.18.224.236&side=consumer&timeout=20000&timestamp=1611753068903&version=1.0, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:12:45   INFO main com.alibaba.dubbo.common.logger.LoggerFactory:? - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter 
[crazyapi] 2021/01/27 21:12:45  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:12:45   WARN main com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory:75 -  [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:12:45   WARN main com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory:93 -  [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:12:46  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:12:46  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:12:46  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:12:47  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:12:47  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:12:47   INFO main com.alibaba.dubbo.remoting.transport.AbstractClient:289 -  [DUBBO] Successed connect to server /192.168.23.135:20880 from NettyClient 10.18.224.236 using dubbo version 2.6.9, channel is NettyChannel [channel=[id: 0x0ae33fca, L:/192.168.23.1:59038 - R:/192.168.23.135:20880]], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:12:47   INFO main com.alibaba.dubbo.remoting.transport.AbstractClient:94 -  [DUBBO] Start NettyClient 5CG026B3WF/10.18.224.236 connect to the server /192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:12:47  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:12:47  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:12:47  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:12:47   INFO main com.alibaba.dubbo.config.AbstractConfig:429 -  [DUBBO] Refer dubbo service com.alibaba.dubbo.rpc.service.GenericService from url dubbo://192.168.23.135:20880/cn.testfan.dubbo.service.MarketService?application=test&dubbo=2.0.2&generic=true&interface=/cn.testfan.dubbo.service.MarketService&pid=25652&register.ip=10.18.224.236&side=consumer&timeout=20000&timestamp=1611753166280&version=1.0, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:12:48  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:12:48   INFO DubboShutdownHook com.alibaba.dubbo.config.DubboShutdownHook:56 -  [DUBBO] Run shutdown hook now., dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:12:48   INFO DubboShutdownHook com.alibaba.dubbo.registry.support.AbstractRegistryFactory:64 -  [DUBBO] Close all registries [], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:12:48   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:446 -  [DUBBO] Close dubbo connect: /192.168.23.1:59038-->/192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:12:48   INFO DubboShutdownHook com.alibaba.dubbo.remoting.transport.netty4.NettyChannel:139 -  [DUBBO] Close netty channel [id: 0x0ae33fca, L:/192.168.23.1:59038 - R:/192.168.23.135:20880], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:12:48   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:460 -  [DUBBO] Close dubbo connect: 10.18.224.236:0-->192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:12:48   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:63 -  [DUBBO] Destroy reference: dubbo://192.168.23.135:20880/cn.testfan.dubbo.service.MarketService?application=test&dubbo=2.0.2&generic=true&interface=/cn.testfan.dubbo.service.MarketService&pid=25652&register.ip=10.18.224.236&side=consumer&timeout=20000&timestamp=1611753166280&version=1.0, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:15:14   INFO main com.alibaba.dubbo.common.logger.LoggerFactory:? - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter 
[crazyapi] 2021/01/27 21:15:14  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:15:14   WARN main com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory:75 -  [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:15:14   WARN main com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory:93 -  [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:15:14  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:15:14  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:15:14  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:15:15  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:15:15  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:15:16   INFO main com.alibaba.dubbo.remoting.transport.AbstractClient:289 -  [DUBBO] Successed connect to server /192.168.23.135:20880 from NettyClient 10.18.224.236 using dubbo version 2.6.9, channel is NettyChannel [channel=[id: 0x8df08357, L:/192.168.23.1:59156 - R:/192.168.23.135:20880]], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:15:16   INFO main com.alibaba.dubbo.remoting.transport.AbstractClient:94 -  [DUBBO] Start NettyClient 5CG026B3WF/10.18.224.236 connect to the server /192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:15:16  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:15:16  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:15:16  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:15:16   INFO main com.alibaba.dubbo.config.AbstractConfig:429 -  [DUBBO] Refer dubbo service com.alibaba.dubbo.rpc.service.GenericService from url dubbo://192.168.23.135:20880/cn.testfan.dubbo.service.MarketService?application=test&dubbo=2.0.2&generic=true&interface=/cn.testfan.dubbo.service.MarketService&pid=41040&register.ip=10.18.224.236&side=consumer&timeout=20000&timestamp=1611753314682&version=1.0, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:15:16  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:15:17   INFO DubboShutdownHook com.alibaba.dubbo.config.DubboShutdownHook:56 -  [DUBBO] Run shutdown hook now., dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:15:17   INFO DubboShutdownHook com.alibaba.dubbo.registry.support.AbstractRegistryFactory:64 -  [DUBBO] Close all registries [], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:15:17   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:446 -  [DUBBO] Close dubbo connect: /192.168.23.1:59156-->/192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:15:17   INFO DubboShutdownHook com.alibaba.dubbo.remoting.transport.netty4.NettyChannel:139 -  [DUBBO] Close netty channel [id: 0x8df08357, L:/192.168.23.1:59156 - R:/192.168.23.135:20880], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:15:17   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:460 -  [DUBBO] Close dubbo connect: 10.18.224.236:0-->192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:15:17   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:63 -  [DUBBO] Destroy reference: dubbo://192.168.23.135:20880/cn.testfan.dubbo.service.MarketService?application=test&dubbo=2.0.2&generic=true&interface=/cn.testfan.dubbo.service.MarketService&pid=41040&register.ip=10.18.224.236&side=consumer&timeout=20000&timestamp=1611753314682&version=1.0, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:16:12   INFO main com.alibaba.dubbo.common.logger.LoggerFactory:? - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter 
[crazyapi] 2021/01/27 21:16:13  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:16:13   WARN main com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory:75 -  [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:16:13   WARN main com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory:93 -  [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:16:13  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:16:13  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:16:13  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:16:14  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:16:14  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:16:15   INFO main com.alibaba.dubbo.remoting.transport.AbstractClient:289 -  [DUBBO] Successed connect to server /192.168.23.135:20880 from NettyClient 10.18.224.236 using dubbo version 2.6.9, channel is NettyChannel [channel=[id: 0x060de49a, L:/192.168.23.1:59232 - R:/192.168.23.135:20880]], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:16:15   INFO main com.alibaba.dubbo.remoting.transport.AbstractClient:94 -  [DUBBO] Start NettyClient 5CG026B3WF/10.18.224.236 connect to the server /192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:16:15  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:16:15  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:16:15  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:16:15   INFO main com.alibaba.dubbo.config.AbstractConfig:429 -  [DUBBO] Refer dubbo service com.alibaba.dubbo.rpc.service.GenericService from url dubbo://192.168.23.135:20880/cn.testfan.dubbo.service.MarketService?application=test&dubbo=2.0.2&generic=true&interface=/cn.testfan.dubbo.service.MarketService&pid=27436&register.ip=10.18.224.236&side=consumer&timeout=20000&timestamp=1611753373435&version=1.0, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:16:15  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:16:15   INFO DubboShutdownHook com.alibaba.dubbo.config.DubboShutdownHook:56 -  [DUBBO] Run shutdown hook now., dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:16:15   INFO DubboShutdownHook com.alibaba.dubbo.registry.support.AbstractRegistryFactory:64 -  [DUBBO] Close all registries [], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:16:15   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:446 -  [DUBBO] Close dubbo connect: /192.168.23.1:59232-->/192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:16:15   INFO DubboShutdownHook com.alibaba.dubbo.remoting.transport.netty4.NettyChannel:139 -  [DUBBO] Close netty channel [id: 0x060de49a, L:/192.168.23.1:59232 - R:/192.168.23.135:20880], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:16:15   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:460 -  [DUBBO] Close dubbo connect: 10.18.224.236:0-->192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:16:15   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:63 -  [DUBBO] Destroy reference: dubbo://192.168.23.135:20880/cn.testfan.dubbo.service.MarketService?application=test&dubbo=2.0.2&generic=true&interface=/cn.testfan.dubbo.service.MarketService&pid=27436&register.ip=10.18.224.236&side=consumer&timeout=20000&timestamp=1611753373435&version=1.0, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:18:44   INFO main com.alibaba.dubbo.common.logger.LoggerFactory:? - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter 
[crazyapi] 2021/01/27 21:18:44  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:18:44   WARN main com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory:75 -  [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:18:44   WARN main com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory:93 -  [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:18:44  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:18:44  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:18:44  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:18:44  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:18:44  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:18:45   INFO main com.alibaba.dubbo.remoting.transport.AbstractClient:289 -  [DUBBO] Successed connect to server /192.168.23.135:20880 from NettyClient 10.18.224.236 using dubbo version 2.6.9, channel is NettyChannel [channel=[id: 0xafe1216b, L:/192.168.23.1:59355 - R:/192.168.23.135:20880]], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:18:45   INFO main com.alibaba.dubbo.remoting.transport.AbstractClient:94 -  [DUBBO] Start NettyClient 5CG026B3WF/10.18.224.236 connect to the server /192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:18:45  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:18:45  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:18:45  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:18:45   INFO main com.alibaba.dubbo.config.AbstractConfig:429 -  [DUBBO] Refer dubbo service com.alibaba.dubbo.rpc.service.GenericService from url dubbo://192.168.23.135:20880/cn.testfan.dubbo.service.MarketService?application=test&dubbo=2.0.2&generic=true&interface=/cn.testfan.dubbo.service.MarketService&pid=41508&register.ip=10.18.224.236&side=consumer&timeout=20000&timestamp=1611753524304&version=1.0, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:18:45  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:18:45   INFO DubboShutdownHook com.alibaba.dubbo.config.DubboShutdownHook:56 -  [DUBBO] Run shutdown hook now., dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:18:45   INFO DubboShutdownHook com.alibaba.dubbo.registry.support.AbstractRegistryFactory:64 -  [DUBBO] Close all registries [], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:18:45   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:446 -  [DUBBO] Close dubbo connect: /192.168.23.1:59355-->/192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:18:45   INFO DubboShutdownHook com.alibaba.dubbo.remoting.transport.netty4.NettyChannel:139 -  [DUBBO] Close netty channel [id: 0xafe1216b, L:/192.168.23.1:59355 - R:/192.168.23.135:20880], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:18:45   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:460 -  [DUBBO] Close dubbo connect: 10.18.224.236:0-->192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:18:45   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:63 -  [DUBBO] Destroy reference: dubbo://192.168.23.135:20880/cn.testfan.dubbo.service.MarketService?application=test&dubbo=2.0.2&generic=true&interface=/cn.testfan.dubbo.service.MarketService&pid=41508&register.ip=10.18.224.236&side=consumer&timeout=20000&timestamp=1611753524304&version=1.0, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:28:22   INFO main com.alibaba.dubbo.common.logger.LoggerFactory:? - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter 
[crazyapi] 2021/01/27 21:28:22  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:28:22   WARN main com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory:75 -  [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:28:22   WARN main com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory:93 -  [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:28:23  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:28:23  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:28:23  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:28:24  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:28:24  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:28:25   INFO main com.alibaba.dubbo.remoting.transport.AbstractClient:289 -  [DUBBO] Successed connect to server /192.168.23.135:20880 from NettyClient 10.18.224.236 using dubbo version 2.6.9, channel is NettyChannel [channel=[id: 0xfc207f5e, L:/192.168.23.1:59778 - R:/192.168.23.135:20880]], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:28:25   INFO main com.alibaba.dubbo.remoting.transport.AbstractClient:94 -  [DUBBO] Start NettyClient 5CG026B3WF/10.18.224.236 connect to the server /192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:28:25  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:28:25  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:28:25  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:28:25   INFO main com.alibaba.dubbo.config.AbstractConfig:429 -  [DUBBO] Refer dubbo service com.alibaba.dubbo.rpc.service.GenericService from url dubbo://192.168.23.135:20880/cn.testfan.dubbo.service.MarketService?application=test&dubbo=2.0.2&generic=true&interface=/cn.testfan.dubbo.service.MarketService&pid=40840&register.ip=10.18.224.236&side=consumer&timeout=20000&timestamp=1611754103182&version=1.0, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:28:25  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:28:25  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:28:25  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:28:25  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:28:25  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:28:25   INFO DubboShutdownHook com.alibaba.dubbo.config.DubboShutdownHook:56 -  [DUBBO] Run shutdown hook now., dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:28:25   INFO DubboShutdownHook com.alibaba.dubbo.registry.support.AbstractRegistryFactory:64 -  [DUBBO] Close all registries [], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:28:25   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:446 -  [DUBBO] Close dubbo connect: /192.168.23.1:59778-->/192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:28:25   INFO DubboShutdownHook com.alibaba.dubbo.remoting.transport.netty4.NettyChannel:139 -  [DUBBO] Close netty channel [id: 0xfc207f5e, L:/192.168.23.1:59778 - R:/192.168.23.135:20880], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:28:25   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:460 -  [DUBBO] Close dubbo connect: 10.18.224.236:0-->192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:28:25   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:63 -  [DUBBO] Destroy reference: dubbo://192.168.23.135:20880/cn.testfan.dubbo.service.MarketService?application=test&dubbo=2.0.2&generic=true&interface=/cn.testfan.dubbo.service.MarketService&pid=40840&register.ip=10.18.224.236&side=consumer&timeout=20000&timestamp=1611754103182&version=1.0, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:30:36   INFO main com.alibaba.dubbo.common.logger.LoggerFactory:? - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter 
[crazyapi] 2021/01/27 21:30:36  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:30:36   WARN main com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory:75 -  [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:30:36   WARN main com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory:93 -  [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:30:36  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:30:36  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:30:36  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:30:37  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:30:37  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:30:37   INFO main com.alibaba.dubbo.remoting.transport.AbstractClient:289 -  [DUBBO] Successed connect to server /192.168.23.135:20880 from NettyClient 10.18.224.236 using dubbo version 2.6.9, channel is NettyChannel [channel=[id: 0xda791947, L:/192.168.23.1:59889 - R:/192.168.23.135:20880]], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:30:37   INFO main com.alibaba.dubbo.remoting.transport.AbstractClient:94 -  [DUBBO] Start NettyClient 5CG026B3WF/10.18.224.236 connect to the server /192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:30:37  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:30:37  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:30:37  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:30:37   INFO main com.alibaba.dubbo.config.AbstractConfig:429 -  [DUBBO] Refer dubbo service com.alibaba.dubbo.rpc.service.GenericService from url dubbo://192.168.23.135:20880/cn.testfan.dubbo.service.MarketService?application=test&dubbo=2.0.2&generic=true&interface=/cn.testfan.dubbo.service.MarketService&pid=4008&register.ip=10.18.224.236&side=consumer&timeout=20000&timestamp=1611754236376&version=1.0, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:30:37  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:30:38  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:30:38  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:30:38  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:30:38  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:30:38   INFO DubboShutdownHook com.alibaba.dubbo.config.DubboShutdownHook:56 -  [DUBBO] Run shutdown hook now., dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:30:38   INFO DubboShutdownHook com.alibaba.dubbo.registry.support.AbstractRegistryFactory:64 -  [DUBBO] Close all registries [], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:30:38   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:446 -  [DUBBO] Close dubbo connect: /192.168.23.1:59889-->/192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:30:38   INFO DubboShutdownHook com.alibaba.dubbo.remoting.transport.netty4.NettyChannel:139 -  [DUBBO] Close netty channel [id: 0xda791947, L:/192.168.23.1:59889 - R:/192.168.23.135:20880], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:30:38   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:460 -  [DUBBO] Close dubbo connect: 10.18.224.236:0-->192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:30:38   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:63 -  [DUBBO] Destroy reference: dubbo://192.168.23.135:20880/cn.testfan.dubbo.service.MarketService?application=test&dubbo=2.0.2&generic=true&interface=/cn.testfan.dubbo.service.MarketService&pid=4008&register.ip=10.18.224.236&side=consumer&timeout=20000&timestamp=1611754236376&version=1.0, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:32:48   INFO main com.alibaba.dubbo.common.logger.LoggerFactory:? - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter 
[crazyapi] 2021/01/27 21:32:48  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:32:48   WARN main com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory:75 -  [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:32:48   WARN main com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory:93 -  [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:32:48  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:32:49  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:32:49  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:32:50  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:32:50  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:32:50   INFO main com.alibaba.dubbo.remoting.transport.AbstractClient:289 -  [DUBBO] Successed connect to server /192.168.23.135:20880 from NettyClient 10.18.224.236 using dubbo version 2.6.9, channel is NettyChannel [channel=[id: 0xf65dc17e, L:/192.168.23.1:60022 - R:/192.168.23.135:20880]], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:32:50   INFO main com.alibaba.dubbo.remoting.transport.AbstractClient:94 -  [DUBBO] Start NettyClient 5CG026B3WF/10.18.224.236 connect to the server /192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:32:50  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:32:50  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:32:51  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:32:51   INFO main com.alibaba.dubbo.config.AbstractConfig:429 -  [DUBBO] Refer dubbo service com.alibaba.dubbo.rpc.service.GenericService from url dubbo://192.168.23.135:20880/cn.testfan.dubbo.service.MarketService?application=test&dubbo=2.0.2&generic=true&interface=/cn.testfan.dubbo.service.MarketService&pid=36996&register.ip=10.18.224.236&side=consumer&timeout=20000&timestamp=1611754369092&version=1.0, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:32:51  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:32:51  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:32:51  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:32:51  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:32:51  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:32:51   INFO DubboShutdownHook com.alibaba.dubbo.config.DubboShutdownHook:56 -  [DUBBO] Run shutdown hook now., dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:32:51   INFO DubboShutdownHook com.alibaba.dubbo.registry.support.AbstractRegistryFactory:64 -  [DUBBO] Close all registries [], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:32:51   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:446 -  [DUBBO] Close dubbo connect: /192.168.23.1:60022-->/192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:32:51   INFO DubboShutdownHook com.alibaba.dubbo.remoting.transport.netty4.NettyChannel:139 -  [DUBBO] Close netty channel [id: 0xf65dc17e, L:/192.168.23.1:60022 - R:/192.168.23.135:20880], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:32:51   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:460 -  [DUBBO] Close dubbo connect: 10.18.224.236:0-->192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:32:51   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:63 -  [DUBBO] Destroy reference: dubbo://192.168.23.135:20880/cn.testfan.dubbo.service.MarketService?application=test&dubbo=2.0.2&generic=true&interface=/cn.testfan.dubbo.service.MarketService&pid=36996&register.ip=10.18.224.236&side=consumer&timeout=20000&timestamp=1611754369092&version=1.0, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:36:28   INFO TestNG-tests-1 com.alibaba.dubbo.common.logger.LoggerFactory:? - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter 
[crazyapi] 2021/01/27 21:36:28  DEBUG TestNG-tests-1 com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:36:28   WARN TestNG-tests-1 com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory:75 -  [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:36:28   WARN TestNG-tests-1 com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory:93 -  [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:36:29  DEBUG TestNG-tests-1 com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:36:29  DEBUG TestNG-tests-1 com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:36:29  DEBUG TestNG-tests-1 com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:36:30  DEBUG TestNG-tests-1 com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:36:30  DEBUG TestNG-tests-1 com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:36:31   INFO TestNG-tests-1 com.alibaba.dubbo.remoting.transport.AbstractClient:289 -  [DUBBO] Successed connect to server /192.168.23.135:20880 from NettyClient 10.18.224.236 using dubbo version 2.6.9, channel is NettyChannel [channel=[id: 0xf7b36c00, L:/192.168.23.1:60225 - R:/192.168.23.135:20880]], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:36:31   INFO TestNG-tests-1 com.alibaba.dubbo.remoting.transport.AbstractClient:94 -  [DUBBO] Start NettyClient 5CG026B3WF/10.18.224.236 connect to the server /192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:36:31  DEBUG TestNG-tests-1 com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:36:31  DEBUG TestNG-tests-1 com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:36:31  DEBUG TestNG-tests-1 com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:36:31   INFO TestNG-tests-1 com.alibaba.dubbo.config.AbstractConfig:429 -  [DUBBO] Refer dubbo service com.alibaba.dubbo.rpc.service.GenericService from url dubbo://192.168.23.135:20880/cn.testfan.dubbo.service.MarketService?application=test&dubbo=2.0.2&generic=true&interface=/cn.testfan.dubbo.service.MarketService&pid=1164&register.ip=10.18.224.236&side=consumer&timeout=20000&timestamp=1611754589244&version=1.0, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:36:31  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:36:32  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:36:32  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:36:32  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:36:32  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:36:32   INFO DubboShutdownHook com.alibaba.dubbo.config.DubboShutdownHook:56 -  [DUBBO] Run shutdown hook now., dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:36:32   INFO DubboShutdownHook com.alibaba.dubbo.registry.support.AbstractRegistryFactory:64 -  [DUBBO] Close all registries [], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:36:32   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:446 -  [DUBBO] Close dubbo connect: /192.168.23.1:60225-->/192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:36:32   INFO DubboShutdownHook com.alibaba.dubbo.remoting.transport.netty4.NettyChannel:139 -  [DUBBO] Close netty channel [id: 0xf7b36c00, L:/192.168.23.1:60225 - R:/192.168.23.135:20880], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:36:32   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:460 -  [DUBBO] Close dubbo connect: 10.18.224.236:0-->192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/27 21:36:32   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:63 -  [DUBBO] Destroy reference: dubbo://192.168.23.135:20880/cn.testfan.dubbo.service.MarketService?application=test&dubbo=2.0.2&generic=true&interface=/cn.testfan.dubbo.service.MarketService&pid=1164&register.ip=10.18.224.236&side=consumer&timeout=20000&timestamp=1611754589244&version=1.0, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:14:45   INFO main com.alibaba.dubbo.common.logger.LoggerFactory:? - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter 
[crazyapi] 2021/01/28 11:14:46  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:14:46   WARN main com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory:75 -  [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:14:46   WARN main com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory:93 -  [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:14:46  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:14:46  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:14:46  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:14:46  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:14:46  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:14:47   INFO main com.alibaba.dubbo.remoting.transport.AbstractClient:289 -  [DUBBO] Successed connect to server /192.168.23.135:20880 from NettyClient 10.18.224.236 using dubbo version 2.6.9, channel is NettyChannel [channel=[id: 0x842cba67, L:/192.168.23.1:51208 - R:/192.168.23.135:20880]], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:14:47   INFO main com.alibaba.dubbo.remoting.transport.AbstractClient:94 -  [DUBBO] Start NettyClient 5CG026B3WF/10.18.224.236 connect to the server /192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:14:47  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:14:47  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:14:47  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:14:47   INFO main com.alibaba.dubbo.config.AbstractConfig:429 -  [DUBBO] Refer dubbo service com.alibaba.dubbo.rpc.service.GenericService from url dubbo://192.168.23.135:20880/cn.testfan.dubbo.service.MarketService?application=test&dubbo=2.0.2&generic=true&interface=/cn.testfan.dubbo.service.MarketService&pid=41924&register.ip=10.18.224.236&side=consumer&timeout=20000&timestamp=1611803686305&version=1.0, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:14:47   INFO DubboShutdownHook com.alibaba.dubbo.config.DubboShutdownHook:56 -  [DUBBO] Run shutdown hook now., dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:14:47   INFO DubboShutdownHook com.alibaba.dubbo.registry.support.AbstractRegistryFactory:64 -  [DUBBO] Close all registries [], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:14:47   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:446 -  [DUBBO] Close dubbo connect: /192.168.23.1:51208-->/192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:14:47   INFO DubboShutdownHook com.alibaba.dubbo.remoting.transport.netty4.NettyChannel:139 -  [DUBBO] Close netty channel [id: 0x842cba67, L:/192.168.23.1:51208 - R:/192.168.23.135:20880], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:14:47   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:460 -  [DUBBO] Close dubbo connect: 10.18.224.236:0-->192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:14:47   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:63 -  [DUBBO] Destroy reference: dubbo://192.168.23.135:20880/cn.testfan.dubbo.service.MarketService?application=test&dubbo=2.0.2&generic=true&interface=/cn.testfan.dubbo.service.MarketService&pid=41924&register.ip=10.18.224.236&side=consumer&timeout=20000&timestamp=1611803686305&version=1.0, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:21:44   INFO main com.alibaba.dubbo.common.logger.LoggerFactory:? - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter 
[crazyapi] 2021/01/28 11:21:44  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:21:44   WARN main com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory:75 -  [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:21:44   WARN main com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory:93 -  [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:21:44  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:21:44  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:21:44  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:21:45  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:21:45  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:21:46   INFO main com.alibaba.dubbo.remoting.transport.AbstractClient:289 -  [DUBBO] Successed connect to server /192.168.23.135:20880 from NettyClient 10.18.224.236 using dubbo version 2.6.9, channel is NettyChannel [channel=[id: 0x38e4cccb, L:/192.168.23.1:51522 - R:/192.168.23.135:20880]], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:21:46   INFO main com.alibaba.dubbo.remoting.transport.AbstractClient:94 -  [DUBBO] Start NettyClient 5CG026B3WF/10.18.224.236 connect to the server /192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:21:46  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:21:46  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:21:46  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:21:46   INFO main com.alibaba.dubbo.config.AbstractConfig:429 -  [DUBBO] Refer dubbo service com.alibaba.dubbo.rpc.service.GenericService from url dubbo://192.168.23.135:20880/cn.testfan.dubbo.service.MarketService?application=test&dubbo=2.0.2&generic=true&interface=/cn.testfan.dubbo.service.MarketService&pid=41056&register.ip=10.18.224.236&side=consumer&timeout=20000&timestamp=1611804104791&version=1.0, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:21:46   INFO DubboShutdownHook com.alibaba.dubbo.config.DubboShutdownHook:56 -  [DUBBO] Run shutdown hook now., dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:21:46   INFO DubboShutdownHook com.alibaba.dubbo.registry.support.AbstractRegistryFactory:64 -  [DUBBO] Close all registries [], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:21:46   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:446 -  [DUBBO] Close dubbo connect: /192.168.23.1:51522-->/192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:21:46   INFO DubboShutdownHook com.alibaba.dubbo.remoting.transport.netty4.NettyChannel:139 -  [DUBBO] Close netty channel [id: 0x38e4cccb, L:/192.168.23.1:51522 - R:/192.168.23.135:20880], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:21:46   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:460 -  [DUBBO] Close dubbo connect: 10.18.224.236:0-->192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:21:46   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:63 -  [DUBBO] Destroy reference: dubbo://192.168.23.135:20880/cn.testfan.dubbo.service.MarketService?application=test&dubbo=2.0.2&generic=true&interface=/cn.testfan.dubbo.service.MarketService&pid=41056&register.ip=10.18.224.236&side=consumer&timeout=20000&timestamp=1611804104791&version=1.0, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:24:7   INFO main com.alibaba.dubbo.common.logger.LoggerFactory:? - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter 
[crazyapi] 2021/01/28 11:24:7  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:24:7   WARN main com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory:75 -  [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:24:7   WARN main com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory:93 -  [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:24:7  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:24:7  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:24:7  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:24:8  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:24:8  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:24:9   INFO main com.alibaba.dubbo.remoting.transport.AbstractClient:289 -  [DUBBO] Successed connect to server /192.168.23.135:20880 from NettyClient 10.18.224.236 using dubbo version 2.6.9, channel is NettyChannel [channel=[id: 0x9d26e3bb, L:/192.168.23.1:51684 - R:/192.168.23.135:20880]], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:24:9   INFO main com.alibaba.dubbo.remoting.transport.AbstractClient:94 -  [DUBBO] Start NettyClient 5CG026B3WF/10.18.224.236 connect to the server /192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:24:9  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:24:9  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:24:9  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:24:9   INFO main com.alibaba.dubbo.config.AbstractConfig:429 -  [DUBBO] Refer dubbo service com.alibaba.dubbo.rpc.service.GenericService from url dubbo://192.168.23.135:20880/cn.testfan.dubbo.service.MarketService?application=test&dubbo=2.0.2&generic=true&interface=/cn.testfan.dubbo.service.MarketService&pid=35164&register.ip=10.18.224.236&side=consumer&timeout=20000&timestamp=1611804247747&version=1.0, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:24:9  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:24:9   INFO DubboShutdownHook com.alibaba.dubbo.config.DubboShutdownHook:56 -  [DUBBO] Run shutdown hook now., dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:24:9   INFO DubboShutdownHook com.alibaba.dubbo.registry.support.AbstractRegistryFactory:64 -  [DUBBO] Close all registries [], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:24:9   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:446 -  [DUBBO] Close dubbo connect: /192.168.23.1:51684-->/192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:24:9   INFO DubboShutdownHook com.alibaba.dubbo.remoting.transport.netty4.NettyChannel:139 -  [DUBBO] Close netty channel [id: 0x9d26e3bb, L:/192.168.23.1:51684 - R:/192.168.23.135:20880], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:24:9   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:460 -  [DUBBO] Close dubbo connect: 10.18.224.236:0-->192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 11:24:9   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:63 -  [DUBBO] Destroy reference: dubbo://192.168.23.135:20880/cn.testfan.dubbo.service.MarketService?application=test&dubbo=2.0.2&generic=true&interface=/cn.testfan.dubbo.service.MarketService&pid=35164&register.ip=10.18.224.236&side=consumer&timeout=20000&timestamp=1611804247747&version=1.0, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:30:49   INFO main com.alibaba.dubbo.common.logger.LoggerFactory:? - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter 
[crazyapi] 2021/01/28 12:30:49  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:30:49   WARN main com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory:75 -  [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:30:49   WARN main com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory:93 -  [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:30:49  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:30:49  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:30:49  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:30:50  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:30:50  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:30:51   INFO main com.alibaba.dubbo.remoting.transport.AbstractClient:289 -  [DUBBO] Successed connect to server /192.168.23.135:20880 from NettyClient 10.18.224.236 using dubbo version 2.6.9, channel is NettyChannel [channel=[id: 0xdd47aecb, L:/192.168.23.1:54005 - R:/192.168.23.135:20880]], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:30:51   INFO main com.alibaba.dubbo.remoting.transport.AbstractClient:94 -  [DUBBO] Start NettyClient 5CG026B3WF/10.18.224.236 connect to the server /192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:30:51  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:30:51  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:30:51  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:30:51   INFO main com.alibaba.dubbo.config.AbstractConfig:429 -  [DUBBO] Refer dubbo service com.alibaba.dubbo.rpc.service.GenericService from url dubbo://192.168.23.135:20880/cn.testfan.dubbo.service.MarketService?application=test&dubbo=2.0.2&generic=true&interface=/cn.testfan.dubbo.service.MarketService&pid=40124&register.ip=10.18.224.236&side=consumer&timeout=20000&timestamp=1611808249833&version=1.0, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:30:51  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:30:51  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:30:51  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:30:51  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:30:51  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:30:51  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:30:51   INFO DubboShutdownHook com.alibaba.dubbo.config.DubboShutdownHook:56 -  [DUBBO] Run shutdown hook now., dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:30:51   INFO DubboShutdownHook com.alibaba.dubbo.registry.support.AbstractRegistryFactory:64 -  [DUBBO] Close all registries [], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:30:51   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:446 -  [DUBBO] Close dubbo connect: /192.168.23.1:54005-->/192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:30:51   INFO DubboShutdownHook com.alibaba.dubbo.remoting.transport.netty4.NettyChannel:139 -  [DUBBO] Close netty channel [id: 0xdd47aecb, L:/192.168.23.1:54005 - R:/192.168.23.135:20880], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:30:51   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:460 -  [DUBBO] Close dubbo connect: 10.18.224.236:0-->192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:30:51   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:63 -  [DUBBO] Destroy reference: dubbo://192.168.23.135:20880/cn.testfan.dubbo.service.MarketService?application=test&dubbo=2.0.2&generic=true&interface=/cn.testfan.dubbo.service.MarketService&pid=40124&register.ip=10.18.224.236&side=consumer&timeout=20000&timestamp=1611808249833&version=1.0, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:32:42   INFO main com.alibaba.dubbo.common.logger.LoggerFactory:? - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter 
[crazyapi] 2021/01/28 12:32:42  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:32:42   WARN main com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory:75 -  [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:32:42   WARN main com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory:93 -  [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:32:42  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:32:42  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:32:42  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:32:43  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:32:43  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:32:43   INFO main com.alibaba.dubbo.remoting.transport.AbstractClient:289 -  [DUBBO] Successed connect to server /192.168.23.135:20880 from NettyClient 10.18.224.236 using dubbo version 2.6.9, channel is NettyChannel [channel=[id: 0x1619cbd5, L:/192.168.23.1:54104 - R:/192.168.23.135:20880]], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:32:43   INFO main com.alibaba.dubbo.remoting.transport.AbstractClient:94 -  [DUBBO] Start NettyClient 5CG026B3WF/10.18.224.236 connect to the server /192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:32:43  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:32:43  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:32:43  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:32:43   INFO main com.alibaba.dubbo.config.AbstractConfig:429 -  [DUBBO] Refer dubbo service com.alibaba.dubbo.rpc.service.GenericService from url dubbo://192.168.23.135:20880/cn.testfan.dubbo.service.MarketService?application=test&dubbo=2.0.2&generic=true&interface=/cn.testfan.dubbo.service.MarketService&pid=33656&register.ip=10.18.224.236&side=consumer&timeout=20000&timestamp=1611808362542&version=1.0, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:32:44  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:32:44  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:32:44  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:32:44  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:32:44  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:32:44  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:32:44  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:32:44   INFO DubboShutdownHook com.alibaba.dubbo.config.DubboShutdownHook:56 -  [DUBBO] Run shutdown hook now., dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:32:44   INFO DubboShutdownHook com.alibaba.dubbo.registry.support.AbstractRegistryFactory:64 -  [DUBBO] Close all registries [], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:32:44   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:446 -  [DUBBO] Close dubbo connect: /192.168.23.1:54104-->/192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:32:44   INFO DubboShutdownHook com.alibaba.dubbo.remoting.transport.netty4.NettyChannel:139 -  [DUBBO] Close netty channel [id: 0x1619cbd5, L:/192.168.23.1:54104 - R:/192.168.23.135:20880], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:32:44   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:460 -  [DUBBO] Close dubbo connect: 10.18.224.236:0-->192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:32:44   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:63 -  [DUBBO] Destroy reference: dubbo://192.168.23.135:20880/cn.testfan.dubbo.service.MarketService?application=test&dubbo=2.0.2&generic=true&interface=/cn.testfan.dubbo.service.MarketService&pid=33656&register.ip=10.18.224.236&side=consumer&timeout=20000&timestamp=1611808362542&version=1.0, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:44:57   INFO main com.alibaba.dubbo.common.logger.LoggerFactory:? - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter 
[crazyapi] 2021/01/28 12:44:57  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:44:57   WARN main com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory:75 -  [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:44:57   WARN main com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory:93 -  [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:44:57  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:44:57  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:44:57  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:44:58  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:44:58  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:44:59   INFO main com.alibaba.dubbo.remoting.transport.AbstractClient:289 -  [DUBBO] Successed connect to server /192.168.23.135:20880 from NettyClient 10.18.224.236 using dubbo version 2.6.9, channel is NettyChannel [channel=[id: 0xf353bf9f, L:/192.168.23.1:54608 - R:/192.168.23.135:20880]], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:44:59   INFO main com.alibaba.dubbo.remoting.transport.AbstractClient:94 -  [DUBBO] Start NettyClient 5CG026B3WF/10.18.224.236 connect to the server /192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:44:59  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:44:59  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:44:59  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:44:59   INFO main com.alibaba.dubbo.config.AbstractConfig:429 -  [DUBBO] Refer dubbo service com.alibaba.dubbo.rpc.service.GenericService from url dubbo://192.168.23.135:20880/cn.testfan.dubbo.service.MarketService?application=test&dubbo=2.0.2&generic=true&interface=/cn.testfan.dubbo.service.MarketService&pid=20120&register.ip=10.18.224.236&side=consumer&timeout=20000&timestamp=1611809097720&version=1.0, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:44:59  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:45:0  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:45:0  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:45:0  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:45:0  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:45:0  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:45:0  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:45:0  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:45:0   INFO DubboShutdownHook com.alibaba.dubbo.config.DubboShutdownHook:56 -  [DUBBO] Run shutdown hook now., dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:45:0   INFO DubboShutdownHook com.alibaba.dubbo.registry.support.AbstractRegistryFactory:64 -  [DUBBO] Close all registries [], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:45:0   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:446 -  [DUBBO] Close dubbo connect: /192.168.23.1:54608-->/192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:45:0   INFO DubboShutdownHook com.alibaba.dubbo.remoting.transport.netty4.NettyChannel:139 -  [DUBBO] Close netty channel [id: 0xf353bf9f, L:/192.168.23.1:54608 - R:/192.168.23.135:20880], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:45:0   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:460 -  [DUBBO] Close dubbo connect: 10.18.224.236:0-->192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:45:0   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:63 -  [DUBBO] Destroy reference: dubbo://192.168.23.135:20880/cn.testfan.dubbo.service.MarketService?application=test&dubbo=2.0.2&generic=true&interface=/cn.testfan.dubbo.service.MarketService&pid=20120&register.ip=10.18.224.236&side=consumer&timeout=20000&timestamp=1611809097720&version=1.0, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:57:11   INFO main com.alibaba.dubbo.common.logger.LoggerFactory:? - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter 
[crazyapi] 2021/01/28 12:57:11  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:57:11   WARN main com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory:75 -  [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:57:11   WARN main com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory:93 -  [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:57:11  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:57:11  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:57:11  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:57:12  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:57:12  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:57:13   INFO main com.alibaba.dubbo.remoting.transport.AbstractClient:289 -  [DUBBO] Successed connect to server /192.168.23.135:20880 from NettyClient 10.18.224.236 using dubbo version 2.6.9, channel is NettyChannel [channel=[id: 0x8d0b8c56, L:/192.168.23.1:55154 - R:/192.168.23.135:20880]], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:57:13   INFO main com.alibaba.dubbo.remoting.transport.AbstractClient:94 -  [DUBBO] Start NettyClient 5CG026B3WF/10.18.224.236 connect to the server /192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:57:13  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:57:13  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:57:13  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:57:13   INFO main com.alibaba.dubbo.config.AbstractConfig:429 -  [DUBBO] Refer dubbo service com.alibaba.dubbo.rpc.service.GenericService from url dubbo://192.168.23.135:20880/cn.testfan.dubbo.service.MarketService?application=test&dubbo=2.0.2&generic=true&interface=/cn.testfan.dubbo.service.MarketService&pid=40168&register.ip=10.18.224.236&side=consumer&timeout=20000&timestamp=1611809831613&version=1.0, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:57:13  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:57:13   INFO DubboShutdownHook com.alibaba.dubbo.config.DubboShutdownHook:56 -  [DUBBO] Run shutdown hook now., dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:57:13   INFO DubboShutdownHook com.alibaba.dubbo.registry.support.AbstractRegistryFactory:64 -  [DUBBO] Close all registries [], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:57:13   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:446 -  [DUBBO] Close dubbo connect: /192.168.23.1:55154-->/192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:57:13   INFO DubboShutdownHook com.alibaba.dubbo.remoting.transport.netty4.NettyChannel:139 -  [DUBBO] Close netty channel [id: 0x8d0b8c56, L:/192.168.23.1:55154 - R:/192.168.23.135:20880], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:57:13   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:460 -  [DUBBO] Close dubbo connect: 10.18.224.236:0-->192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/28 12:57:13   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:63 -  [DUBBO] Destroy reference: dubbo://192.168.23.135:20880/cn.testfan.dubbo.service.MarketService?application=test&dubbo=2.0.2&generic=true&interface=/cn.testfan.dubbo.service.MarketService&pid=40168&register.ip=10.18.224.236&side=consumer&timeout=20000&timestamp=1611809831613&version=1.0, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 20:58:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第1行第0列的值是：创建客户-正确 
[crazyapi] 2021/01/29 20:58:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第1行第1列的值是：创建客户 
[crazyapi] 2021/01/29 20:58:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第1行第2列的值是：/CrmCustomer/addOrUpdate 
[crazyapi] 2021/01/29 20:58:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第1行第3列的值是：POST 
[crazyapi] 2021/01/29 20:58:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第1行第4列的值是：{
"Admin-Token":"token"
} 
[crazyapi] 2021/01/29 20:58:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第1行第5列的值是：{
 "entity": {
  "customer_name": "shamo123",
  "mobile": "18991112345",
  "telephone": "01028375678",
  "website": "http://testfan.cn",
  "next_time": "2020-04-02 00:00:00",
  "remark": "这是备注",
  "address": "北京市,北京城区,昌平区",
  "detailAddress": "霍营地铁",
  "location": "",
  "lng": "",
  "lat": ""
 }
} 
[crazyapi] 2021/01/29 20:58:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第1行第6列的值是：{
"code":0
} 
[crazyapi] 2021/01/29 20:58:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第2行第0列的值是：创建客户-客户名称为空 
[crazyapi] 2021/01/29 20:58:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第2行第1列的值是：创建客户 
[crazyapi] 2021/01/29 20:58:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第2行第2列的值是：/CrmCustomer/addOrUpdate 
[crazyapi] 2021/01/29 20:58:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第2行第3列的值是：POST 
[crazyapi] 2021/01/29 20:58:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第2行第4列的值是：{
"Admin-Token":"token"
} 
[crazyapi] 2021/01/29 20:58:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第2行第5列的值是：{
 "entity": {
  "customer_name": "",
  "mobile": "18991112345",
  "telephone": "01028375678",
  "website": "http://testfan.cn",
  "next_time": "2020-04-02 00:00:00",
  "remark": "这是备注",
  "address": "北京市,北京城区,昌平区",
  "detailAddress": "霍营地铁",
  "location": "",
  "lng": "",
  "lat": ""
 }
} 
[crazyapi] 2021/01/29 20:58:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第2行第6列的值是：{
"code":0,
"msg":"客户名称不能为空"
} 
[crazyapi] 2021/01/29 20:58:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第3行第0列的值是：创建联系人-正确 
[crazyapi] 2021/01/29 20:58:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第3行第1列的值是：创建联系人 
[crazyapi] 2021/01/29 20:58:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第3行第2列的值是：/CrmContacts/addOrUpdate 
[crazyapi] 2021/01/29 20:58:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第3行第3列的值是：POST 
[crazyapi] 2021/01/29 20:58:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第3行第4列的值是：{
"Admin-Token":"token"
} 
[crazyapi] 2021/01/29 20:58:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第3行第5列的值是：{
 "entity": {
  "name": "沙漠",
  "customer_id": 5,
  "mobile": "18098909090",
  "telephone": "01023456789",
  "email": "shddhdd@163.com",
  "post": "总经理",
  "address": "北京霍营",
  "next_time": "2020-04-23 16:03:47",
  "remark": "这是备注"
 }
}
 
[crazyapi] 2021/01/29 20:58:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第3行第6列的值是：{
"code":0
} 
[crazyapi] 2021/01/29 20:58:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第4行第0列的值是：创建联系人-客户不存在 
[crazyapi] 2021/01/29 20:58:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第4行第1列的值是：创建联系人 
[crazyapi] 2021/01/29 20:58:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第4行第2列的值是：/CrmContacts/addOrUpdate 
[crazyapi] 2021/01/29 20:58:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第4行第3列的值是：POST 
[crazyapi] 2021/01/29 20:58:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第4行第4列的值是：{
"Admin-Token":"token"
} 
[crazyapi] 2021/01/29 20:58:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第4行第5列的值是：{
 "entity": {
  "name": "沙漠",
  "customer_id": 237466,
  "mobile": "18098909090",
  "telephone": "01023456789",
  "email": "shddhdd@163.com",
  "post": "总经理",
  "address": "北京霍营",
  "next_time": "2020-04-23 16:03:47",
  "remark": "这是备注"
 }
}
 
[crazyapi] 2021/01/29 20:58:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第4行第6列的值是：{
"code":0,
"msg":"客户不存在"
} 
[crazyapi] 2021/01/29 20:58:36   INFO main com.alibaba.dubbo.common.logger.LoggerFactory:? - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter 
[crazyapi] 2021/01/29 20:58:36  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 20:58:36   WARN main com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory:75 -  [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 20:58:36   WARN main com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory:93 -  [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 20:58:36  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 20:58:36  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 20:58:36  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 20:58:37  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 20:58:37  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 20:58:38   INFO main com.alibaba.dubbo.remoting.transport.AbstractClient:289 -  [DUBBO] Successed connect to server /192.168.23.135:20880 from NettyClient 10.18.224.236 using dubbo version 2.6.9, channel is NettyChannel [channel=[id: 0x4849834d, L:/192.168.23.1:57659 - R:/192.168.23.135:20880]], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 20:58:38   INFO main com.alibaba.dubbo.remoting.transport.AbstractClient:94 -  [DUBBO] Start NettyClient 5CG026B3WF/10.18.224.236 connect to the server /192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 20:58:38  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 20:58:38  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 20:58:38  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 20:58:38   INFO main com.alibaba.dubbo.config.AbstractConfig:429 -  [DUBBO] Refer dubbo service com.alibaba.dubbo.rpc.service.GenericService from url dubbo://192.168.23.135:20880/cn.testfan.dubbo.service.MarketService?application=test&dubbo=2.0.2&generic=true&interface=/cn.testfan.dubbo.service.MarketService&pid=46692&register.ip=10.18.224.236&side=consumer&timeout=20000&timestamp=1611925116771&version=1.0, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 20:58:40  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 20:58:40  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 20:58:40  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 20:58:40  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 20:58:41  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 20:58:41  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 20:58:41  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 20:58:41  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 20:58:41  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 20:58:41  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 20:58:42  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 20:58:42  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 20:58:42  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 20:58:42  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 20:58:42  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 20:58:42  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 20:58:43  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:00:13  DEBUG NettyClientWorker-1-1 com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler:74 -  [DUBBO] Received heartbeat from remote channel /192.168.23.135:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:00:49   WARN Finalizer com.alibaba.dubbo.config.AbstractConfig:97 -  [DUBBO] ReferenceConfig(dubbo://192.168.23.135:20880) is not DESTROYED when FINALIZE, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:00:49   WARN Finalizer com.alibaba.dubbo.config.AbstractConfig:97 -  [DUBBO] ReferenceConfig(dubbo://192.168.23.135:20880) is not DESTROYED when FINALIZE, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:00:49   WARN Finalizer com.alibaba.dubbo.config.AbstractConfig:97 -  [DUBBO] ReferenceConfig(dubbo://192.168.23.135:20880) is not DESTROYED when FINALIZE, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:00:49   WARN Finalizer com.alibaba.dubbo.config.AbstractConfig:97 -  [DUBBO] ReferenceConfig(dubbo://192.168.23.135:20880) is not DESTROYED when FINALIZE, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:00:49   WARN Finalizer com.alibaba.dubbo.config.AbstractConfig:97 -  [DUBBO] ReferenceConfig(dubbo://192.168.23.135:20880) is not DESTROYED when FINALIZE, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:00:49   WARN Finalizer com.alibaba.dubbo.config.AbstractConfig:97 -  [DUBBO] ReferenceConfig(dubbo://192.168.23.135:20880) is not DESTROYED when FINALIZE, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:00:49   WARN Finalizer com.alibaba.dubbo.config.AbstractConfig:97 -  [DUBBO] ReferenceConfig(dubbo://192.168.23.135:20880) is not DESTROYED when FINALIZE, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:00:49   WARN Finalizer com.alibaba.dubbo.config.AbstractConfig:97 -  [DUBBO] ReferenceConfig(dubbo://192.168.23.135:20880) is not DESTROYED when FINALIZE, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:00:49   WARN Finalizer com.alibaba.dubbo.config.AbstractConfig:97 -  [DUBBO] ReferenceConfig(dubbo://192.168.23.135:20880) is not DESTROYED when FINALIZE, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:00:49   WARN Finalizer com.alibaba.dubbo.config.AbstractConfig:97 -  [DUBBO] ReferenceConfig(dubbo://192.168.23.135:20880) is not DESTROYED when FINALIZE, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:00:49   WARN Finalizer com.alibaba.dubbo.config.AbstractConfig:97 -  [DUBBO] ReferenceConfig(dubbo://192.168.23.135:20880) is not DESTROYED when FINALIZE, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:00:49   WARN Finalizer com.alibaba.dubbo.config.AbstractConfig:97 -  [DUBBO] ReferenceConfig(dubbo://192.168.23.135:20880) is not DESTROYED when FINALIZE, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:00:49   WARN Finalizer com.alibaba.dubbo.config.AbstractConfig:97 -  [DUBBO] ReferenceConfig(dubbo://192.168.23.135:20880) is not DESTROYED when FINALIZE, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:00:49   WARN Finalizer com.alibaba.dubbo.config.AbstractConfig:97 -  [DUBBO] ReferenceConfig(dubbo://192.168.23.135:20880) is not DESTROYED when FINALIZE, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:00:49   WARN Finalizer com.alibaba.dubbo.config.AbstractConfig:97 -  [DUBBO] ReferenceConfig(dubbo://192.168.23.135:20880) is not DESTROYED when FINALIZE, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:00:49   WARN Finalizer com.alibaba.dubbo.config.AbstractConfig:97 -  [DUBBO] ReferenceConfig(dubbo://192.168.23.135:20880) is not DESTROYED when FINALIZE, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:01:9  DEBUG NettyClientWorker-1-1 com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler:74 -  [DUBBO] Received heartbeat from remote channel /192.168.23.135:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:02:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第0列的值是：注册成功 
[crazyapi] 2021/01/29 21:02:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第1列的值是：sly1234 
[crazyapi] 2021/01/29 21:02:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第2列的值是：123456 
[crazyapi] 2021/01/29 21:02:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第3列的值是：username 
[crazyapi] 2021/01/29 21:02:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第4列的值是：1 
[crazyapi] 2021/01/29 21:02:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第5列的值是：注册成功 
[crazyapi] 2021/01/29 21:02:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第0列的值是：用户已存在 
[crazyapi] 2021/01/29 21:02:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第1列的值是：sly1234 
[crazyapi] 2021/01/29 21:02:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第2列的值是：123456 
[crazyapi] 2021/01/29 21:02:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第3列的值是：username 
[crazyapi] 2021/01/29 21:02:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第4列的值是：1 
[crazyapi] 2021/01/29 21:02:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第5列的值是：账号已存在 
[crazyapi] 2021/01/29 21:02:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第3行第0列的值是：用户名为空 
[crazyapi] 2021/01/29 21:02:35  ERROR main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:91 - java.lang.NullPointerException 
[crazyapi] 2021/01/29 21:02:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第3行第2列的值是：123456 
[crazyapi] 2021/01/29 21:02:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第3行第3列的值是：username 
[crazyapi] 2021/01/29 21:02:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第3行第4列的值是：1 
[crazyapi] 2021/01/29 21:02:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第3行第5列的值是：账号不能为空 
[crazyapi] 2021/01/29 21:02:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第4行第0列的值是：密码为空 
[crazyapi] 2021/01/29 21:02:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第4行第1列的值是：sly 
[crazyapi] 2021/01/29 21:02:35  ERROR main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:91 - java.lang.NullPointerException 
[crazyapi] 2021/01/29 21:02:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第4行第3列的值是：username 
[crazyapi] 2021/01/29 21:02:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第4行第4列的值是：1 
[crazyapi] 2021/01/29 21:02:35   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第4行第5列的值是：密码不能为空 
[crazyapi] 2021/01/29 21:02:38  DEBUG dubbo-remoting-client-heartbeat-thread-1 com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask:66 -  [DUBBO] Send heartbeat to remote channel /192.168.23.135:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:02:38  DEBUG NettyClientWorker-1-1 com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler:84 -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:03:38  DEBUG dubbo-remoting-client-heartbeat-thread-2 com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask:66 -  [DUBBO] Send heartbeat to remote channel /192.168.23.135:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:03:38  DEBUG NettyClientWorker-1-1 com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler:84 -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:04:19   INFO DubboShutdownHook com.alibaba.dubbo.config.DubboShutdownHook:56 -  [DUBBO] Run shutdown hook now., dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:04:19   INFO DubboShutdownHook com.alibaba.dubbo.registry.support.AbstractRegistryFactory:64 -  [DUBBO] Close all registries [], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:04:19   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:446 -  [DUBBO] Close dubbo connect: /192.168.23.1:57659-->/192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:04:19   INFO DubboShutdownHook com.alibaba.dubbo.remoting.transport.netty4.NettyChannel:139 -  [DUBBO] Close netty channel [id: 0x4849834d, L:/192.168.23.1:57659 - R:/192.168.23.135:20880], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:04:19   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:460 -  [DUBBO] Close dubbo connect: 10.18.224.236:0-->192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:04:19   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:63 -  [DUBBO] Destroy reference: dubbo://192.168.23.135:20880/cn.testfan.dubbo.service.MarketService?application=test&dubbo=2.0.2&generic=true&interface=/cn.testfan.dubbo.service.MarketService&pid=46692&register.ip=10.18.224.236&side=consumer&timeout=20000&timestamp=1611925116771&version=1.0, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:12   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第1行第0列的值是：创建客户-正确 
[crazyapi] 2021/01/29 21:08:12   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第1行第1列的值是：创建客户 
[crazyapi] 2021/01/29 21:08:12   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第1行第2列的值是：/CrmCustomer/addOrUpdate 
[crazyapi] 2021/01/29 21:08:12   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第1行第3列的值是：POST 
[crazyapi] 2021/01/29 21:08:12   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第1行第4列的值是：{
"Admin-Token":"token"
} 
[crazyapi] 2021/01/29 21:08:12   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第1行第5列的值是：{
 "entity": {
  "customer_name": "shamo123",
  "mobile": "18991112345",
  "telephone": "01028375678",
  "website": "http://testfan.cn",
  "next_time": "2020-04-02 00:00:00",
  "remark": "这是备注",
  "address": "北京市,北京城区,昌平区",
  "detailAddress": "霍营地铁",
  "location": "",
  "lng": "",
  "lat": ""
 }
} 
[crazyapi] 2021/01/29 21:08:12   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第1行第6列的值是：{
"code":0
} 
[crazyapi] 2021/01/29 21:08:12   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第2行第0列的值是：创建客户-客户名称为空 
[crazyapi] 2021/01/29 21:08:12   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第2行第1列的值是：创建客户 
[crazyapi] 2021/01/29 21:08:12   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第2行第2列的值是：/CrmCustomer/addOrUpdate 
[crazyapi] 2021/01/29 21:08:12   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第2行第3列的值是：POST 
[crazyapi] 2021/01/29 21:08:12   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第2行第4列的值是：{
"Admin-Token":"token"
} 
[crazyapi] 2021/01/29 21:08:12   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第2行第5列的值是：{
 "entity": {
  "customer_name": "",
  "mobile": "18991112345",
  "telephone": "01028375678",
  "website": "http://testfan.cn",
  "next_time": "2020-04-02 00:00:00",
  "remark": "这是备注",
  "address": "北京市,北京城区,昌平区",
  "detailAddress": "霍营地铁",
  "location": "",
  "lng": "",
  "lat": ""
 }
} 
[crazyapi] 2021/01/29 21:08:12   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第2行第6列的值是：{
"code":0,
"msg":"客户名称不能为空"
} 
[crazyapi] 2021/01/29 21:08:12   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第3行第0列的值是：创建联系人-正确 
[crazyapi] 2021/01/29 21:08:12   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第3行第1列的值是：创建联系人 
[crazyapi] 2021/01/29 21:08:12   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第3行第2列的值是：/CrmContacts/addOrUpdate 
[crazyapi] 2021/01/29 21:08:12   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第3行第3列的值是：POST 
[crazyapi] 2021/01/29 21:08:12   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第3行第4列的值是：{
"Admin-Token":"token"
} 
[crazyapi] 2021/01/29 21:08:12   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第3行第5列的值是：{
 "entity": {
  "name": "沙漠",
  "customer_id": 5,
  "mobile": "18098909090",
  "telephone": "01023456789",
  "email": "shddhdd@163.com",
  "post": "总经理",
  "address": "北京霍营",
  "next_time": "2020-04-23 16:03:47",
  "remark": "这是备注"
 }
}
 
[crazyapi] 2021/01/29 21:08:12   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第3行第6列的值是：{
"code":0
} 
[crazyapi] 2021/01/29 21:08:12   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第4行第0列的值是：创建联系人-客户不存在 
[crazyapi] 2021/01/29 21:08:12   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第4行第1列的值是：创建联系人 
[crazyapi] 2021/01/29 21:08:12   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第4行第2列的值是：/CrmContacts/addOrUpdate 
[crazyapi] 2021/01/29 21:08:12   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第4行第3列的值是：POST 
[crazyapi] 2021/01/29 21:08:12   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第4行第4列的值是：{
"Admin-Token":"token"
} 
[crazyapi] 2021/01/29 21:08:12   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第4行第5列的值是：{
 "entity": {
  "name": "沙漠",
  "customer_id": 237466,
  "mobile": "18098909090",
  "telephone": "01023456789",
  "email": "shddhdd@163.com",
  "post": "总经理",
  "address": "北京霍营",
  "next_time": "2020-04-23 16:03:47",
  "remark": "这是备注"
 }
}
 
[crazyapi] 2021/01/29 21:08:12   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第4行第6列的值是：{
"code":0,
"msg":"客户不存在"
} 
[crazyapi] 2021/01/29 21:08:12   INFO main com.alibaba.dubbo.common.logger.LoggerFactory:? - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter 
[crazyapi] 2021/01/29 21:08:12  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:12   WARN main com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory:75 -  [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:12   WARN main com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory:93 -  [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:12  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:12  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:12  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:13  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:13  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:13   INFO main com.alibaba.dubbo.remoting.transport.AbstractClient:289 -  [DUBBO] Successed connect to server /192.168.23.135:20880 from NettyClient 10.18.224.236 using dubbo version 2.6.9, channel is NettyChannel [channel=[id: 0xb2b90f7d, L:/192.168.23.1:58230 - R:/192.168.23.135:20880]], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:13   INFO main com.alibaba.dubbo.remoting.transport.AbstractClient:94 -  [DUBBO] Start NettyClient 5CG026B3WF/10.18.224.236 connect to the server /192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:13  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:13  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:13  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:13   INFO main com.alibaba.dubbo.config.AbstractConfig:429 -  [DUBBO] Refer dubbo service com.alibaba.dubbo.rpc.service.GenericService from url dubbo://192.168.23.135:20880/cn.testfan.dubbo.service.MarketService?application=test&dubbo=2.0.2&generic=true&interface=/cn.testfan.dubbo.service.MarketService&pid=49256&register.ip=10.18.224.236&side=consumer&timeout=20000&timestamp=1611925692868&version=1.0, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:14  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:14  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:14  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:14  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:14  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:14  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:14  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:14  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:14  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:14  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:14  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:14  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:14  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:14  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:14  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:14  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:14  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:38   WARN Finalizer com.alibaba.dubbo.config.AbstractConfig:97 -  [DUBBO] ReferenceConfig(dubbo://192.168.23.135:20880) is not DESTROYED when FINALIZE, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:38   WARN Finalizer com.alibaba.dubbo.config.AbstractConfig:97 -  [DUBBO] ReferenceConfig(dubbo://192.168.23.135:20880) is not DESTROYED when FINALIZE, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:38   WARN Finalizer com.alibaba.dubbo.config.AbstractConfig:97 -  [DUBBO] ReferenceConfig(dubbo://192.168.23.135:20880) is not DESTROYED when FINALIZE, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:38   WARN Finalizer com.alibaba.dubbo.config.AbstractConfig:97 -  [DUBBO] ReferenceConfig(dubbo://192.168.23.135:20880) is not DESTROYED when FINALIZE, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:38   WARN Finalizer com.alibaba.dubbo.config.AbstractConfig:97 -  [DUBBO] ReferenceConfig(dubbo://192.168.23.135:20880) is not DESTROYED when FINALIZE, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:38   WARN Finalizer com.alibaba.dubbo.config.AbstractConfig:97 -  [DUBBO] ReferenceConfig(dubbo://192.168.23.135:20880) is not DESTROYED when FINALIZE, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:38   WARN Finalizer com.alibaba.dubbo.config.AbstractConfig:97 -  [DUBBO] ReferenceConfig(dubbo://192.168.23.135:20880) is not DESTROYED when FINALIZE, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:38   WARN Finalizer com.alibaba.dubbo.config.AbstractConfig:97 -  [DUBBO] ReferenceConfig(dubbo://192.168.23.135:20880) is not DESTROYED when FINALIZE, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:38   WARN Finalizer com.alibaba.dubbo.config.AbstractConfig:97 -  [DUBBO] ReferenceConfig(dubbo://192.168.23.135:20880) is not DESTROYED when FINALIZE, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:38   WARN Finalizer com.alibaba.dubbo.config.AbstractConfig:97 -  [DUBBO] ReferenceConfig(dubbo://192.168.23.135:20880) is not DESTROYED when FINALIZE, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:38   WARN Finalizer com.alibaba.dubbo.config.AbstractConfig:97 -  [DUBBO] ReferenceConfig(dubbo://192.168.23.135:20880) is not DESTROYED when FINALIZE, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:38   WARN Finalizer com.alibaba.dubbo.config.AbstractConfig:97 -  [DUBBO] ReferenceConfig(dubbo://192.168.23.135:20880) is not DESTROYED when FINALIZE, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:38   WARN Finalizer com.alibaba.dubbo.config.AbstractConfig:97 -  [DUBBO] ReferenceConfig(dubbo://192.168.23.135:20880) is not DESTROYED when FINALIZE, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:38   WARN Finalizer com.alibaba.dubbo.config.AbstractConfig:97 -  [DUBBO] ReferenceConfig(dubbo://192.168.23.135:20880) is not DESTROYED when FINALIZE, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:38   WARN Finalizer com.alibaba.dubbo.config.AbstractConfig:97 -  [DUBBO] ReferenceConfig(dubbo://192.168.23.135:20880) is not DESTROYED when FINALIZE, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:38   WARN Finalizer com.alibaba.dubbo.config.AbstractConfig:97 -  [DUBBO] ReferenceConfig(dubbo://192.168.23.135:20880) is not DESTROYED when FINALIZE, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:40   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第0列的值是：注册成功 
[crazyapi] 2021/01/29 21:08:40   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第1列的值是：sly1234 
[crazyapi] 2021/01/29 21:08:40   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第2列的值是：123456 
[crazyapi] 2021/01/29 21:08:40   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第3列的值是：username 
[crazyapi] 2021/01/29 21:08:40   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第4列的值是：1 
[crazyapi] 2021/01/29 21:08:40   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第5列的值是：注册成功 
[crazyapi] 2021/01/29 21:08:40   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第0列的值是：用户已存在 
[crazyapi] 2021/01/29 21:08:40   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第1列的值是：sly1234 
[crazyapi] 2021/01/29 21:08:40   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第2列的值是：123456 
[crazyapi] 2021/01/29 21:08:40   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第3列的值是：username 
[crazyapi] 2021/01/29 21:08:40   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第4列的值是：1 
[crazyapi] 2021/01/29 21:08:40   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第5列的值是：账号已存在 
[crazyapi] 2021/01/29 21:08:40   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第3行第0列的值是：用户名为空 
[crazyapi] 2021/01/29 21:08:40  ERROR main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:91 - java.lang.NullPointerException 
[crazyapi] 2021/01/29 21:08:40   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第3行第2列的值是：123456 
[crazyapi] 2021/01/29 21:08:40   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第3行第3列的值是：username 
[crazyapi] 2021/01/29 21:08:40   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第3行第4列的值是：1 
[crazyapi] 2021/01/29 21:08:40   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第3行第5列的值是：账号不能为空 
[crazyapi] 2021/01/29 21:08:40   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第4行第0列的值是：密码为空 
[crazyapi] 2021/01/29 21:08:40   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第4行第1列的值是：sly 
[crazyapi] 2021/01/29 21:08:40  ERROR main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:91 - java.lang.NullPointerException 
[crazyapi] 2021/01/29 21:08:40   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第4行第3列的值是：username 
[crazyapi] 2021/01/29 21:08:40   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第4行第4列的值是：1 
[crazyapi] 2021/01/29 21:08:40   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第4行第5列的值是：密码不能为空 
[crazyapi] 2021/01/29 21:08:45   INFO DubboShutdownHook com.alibaba.dubbo.config.DubboShutdownHook:56 -  [DUBBO] Run shutdown hook now., dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:45   INFO DubboShutdownHook com.alibaba.dubbo.registry.support.AbstractRegistryFactory:64 -  [DUBBO] Close all registries [], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:45   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:446 -  [DUBBO] Close dubbo connect: /192.168.23.1:58230-->/192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:45   INFO DubboShutdownHook com.alibaba.dubbo.remoting.transport.netty4.NettyChannel:139 -  [DUBBO] Close netty channel [id: 0xb2b90f7d, L:/192.168.23.1:58230 - R:/192.168.23.135:20880], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:45   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:460 -  [DUBBO] Close dubbo connect: 10.18.224.236:0-->192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:08:45   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:63 -  [DUBBO] Destroy reference: dubbo://192.168.23.135:20880/cn.testfan.dubbo.service.MarketService?application=test&dubbo=2.0.2&generic=true&interface=/cn.testfan.dubbo.service.MarketService&pid=49256&register.ip=10.18.224.236&side=consumer&timeout=20000&timestamp=1611925692868&version=1.0, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:13:42   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第1行第0列的值是：创建客户-正确 
[crazyapi] 2021/01/29 21:13:42   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第1行第1列的值是：创建客户 
[crazyapi] 2021/01/29 21:13:42   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第1行第2列的值是：/CrmCustomer/addOrUpdate 
[crazyapi] 2021/01/29 21:13:42   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第1行第3列的值是：POST 
[crazyapi] 2021/01/29 21:13:42   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第1行第4列的值是：{
"Admin-Token":"token"
} 
[crazyapi] 2021/01/29 21:13:42   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第1行第5列的值是：{
 "entity": {
  "customer_name": "shamo123",
  "mobile": "18991112345",
  "telephone": "01028375678",
  "website": "http://testfan.cn",
  "next_time": "2020-04-02 00:00:00",
  "remark": "这是备注",
  "address": "北京市,北京城区,昌平区",
  "detailAddress": "霍营地铁",
  "location": "",
  "lng": "",
  "lat": ""
 }
} 
[crazyapi] 2021/01/29 21:13:42   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第1行第6列的值是：{
"code":0
} 
[crazyapi] 2021/01/29 21:13:42   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第2行第0列的值是：创建客户-客户名称为空 
[crazyapi] 2021/01/29 21:13:42   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第2行第1列的值是：创建客户 
[crazyapi] 2021/01/29 21:13:42   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第2行第2列的值是：/CrmCustomer/addOrUpdate 
[crazyapi] 2021/01/29 21:13:42   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第2行第3列的值是：POST 
[crazyapi] 2021/01/29 21:13:42   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第2行第4列的值是：{
"Admin-Token":"token"
} 
[crazyapi] 2021/01/29 21:13:42   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第2行第5列的值是：{
 "entity": {
  "customer_name": "",
  "mobile": "18991112345",
  "telephone": "01028375678",
  "website": "http://testfan.cn",
  "next_time": "2020-04-02 00:00:00",
  "remark": "这是备注",
  "address": "北京市,北京城区,昌平区",
  "detailAddress": "霍营地铁",
  "location": "",
  "lng": "",
  "lat": ""
 }
} 
[crazyapi] 2021/01/29 21:13:42   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第2行第6列的值是：{
"code":0,
"msg":"客户名称不能为空"
} 
[crazyapi] 2021/01/29 21:13:42   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第3行第0列的值是：创建联系人-正确 
[crazyapi] 2021/01/29 21:13:42   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第3行第1列的值是：创建联系人 
[crazyapi] 2021/01/29 21:13:42   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第3行第2列的值是：/CrmContacts/addOrUpdate 
[crazyapi] 2021/01/29 21:13:42   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第3行第3列的值是：POST 
[crazyapi] 2021/01/29 21:13:42   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第3行第4列的值是：{
"Admin-Token":"token"
} 
[crazyapi] 2021/01/29 21:13:42   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第3行第5列的值是：{
 "entity": {
  "name": "沙漠",
  "customer_id": 5,
  "mobile": "18098909090",
  "telephone": "01023456789",
  "email": "shddhdd@163.com",
  "post": "总经理",
  "address": "北京霍营",
  "next_time": "2020-04-23 16:03:47",
  "remark": "这是备注"
 }
}
 
[crazyapi] 2021/01/29 21:13:42   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第3行第6列的值是：{
"code":0
} 
[crazyapi] 2021/01/29 21:13:42   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第4行第0列的值是：创建联系人-客户不存在 
[crazyapi] 2021/01/29 21:13:42   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第4行第1列的值是：创建联系人 
[crazyapi] 2021/01/29 21:13:42   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第4行第2列的值是：/CrmContacts/addOrUpdate 
[crazyapi] 2021/01/29 21:13:42   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第4行第3列的值是：POST 
[crazyapi] 2021/01/29 21:13:42   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第4行第4列的值是：{
"Admin-Token":"token"
} 
[crazyapi] 2021/01/29 21:13:42   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第4行第5列的值是：{
 "entity": {
  "name": "沙漠",
  "customer_id": 237466,
  "mobile": "18098909090",
  "telephone": "01023456789",
  "email": "shddhdd@163.com",
  "post": "总经理",
  "address": "北京霍营",
  "next_time": "2020-04-23 16:03:47",
  "remark": "这是备注"
 }
}
 
[crazyapi] 2021/01/29 21:13:42   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【crm】的第4行第6列的值是：{
"code":0,
"msg":"客户不存在"
} 
[crazyapi] 2021/01/29 21:13:43   INFO main com.alibaba.dubbo.common.logger.LoggerFactory:? - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter 
[crazyapi] 2021/01/29 21:13:43  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:13:43   WARN main com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory:75 -  [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:13:43   WARN main com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory:93 -  [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:13:43  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:13:43  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:13:43  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:13:43  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:13:43  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:13:44   INFO main com.alibaba.dubbo.remoting.transport.AbstractClient:289 -  [DUBBO] Successed connect to server /192.168.23.135:20880 from NettyClient 10.18.224.236 using dubbo version 2.6.9, channel is NettyChannel [channel=[id: 0xefa48f75, L:/192.168.23.1:58561 - R:/192.168.23.135:20880]], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:13:44   INFO main com.alibaba.dubbo.remoting.transport.AbstractClient:94 -  [DUBBO] Start NettyClient 5CG026B3WF/10.18.224.236 connect to the server /192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:13:44  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:13:44  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:13:44  DEBUG main com.alibaba.dubbo.common.extension.ExtensionLoader:942 -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:13:44   INFO main com.alibaba.dubbo.config.AbstractConfig:429 -  [DUBBO] Refer dubbo service com.alibaba.dubbo.rpc.service.GenericService from url dubbo://192.168.23.135:20880/cn.testfan.dubbo.service.MarketService?application=test&dubbo=2.0.2&generic=true&interface=/cn.testfan.dubbo.service.MarketService&pid=46396&register.ip=10.18.224.236&side=consumer&timeout=20000&timestamp=1611926023604&version=1.0, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:13:44  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:13:44  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:13:44  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:13:44  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:13:44  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:13:44  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:13:44  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:13:44  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:13:45  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:13:45  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:13:45  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:13:45  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:13:45  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:13:45  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:13:45  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:13:45  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:13:45  DEBUG DubboClientHandler-192.168.23.135:20880-thread-1 com.alibaba.dubbo.remoting.transport.DecodeHandler:59 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:13:46   WARN Finalizer com.alibaba.dubbo.config.AbstractConfig:97 -  [DUBBO] ReferenceConfig(dubbo://192.168.23.135:20880) is not DESTROYED when FINALIZE, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:13:46   WARN Finalizer com.alibaba.dubbo.config.AbstractConfig:97 -  [DUBBO] ReferenceConfig(dubbo://192.168.23.135:20880) is not DESTROYED when FINALIZE, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:13:46   WARN Finalizer com.alibaba.dubbo.config.AbstractConfig:97 -  [DUBBO] ReferenceConfig(dubbo://192.168.23.135:20880) is not DESTROYED when FINALIZE, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:13:46   WARN Finalizer com.alibaba.dubbo.config.AbstractConfig:97 -  [DUBBO] ReferenceConfig(dubbo://192.168.23.135:20880) is not DESTROYED when FINALIZE, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:13:46   WARN Finalizer com.alibaba.dubbo.config.AbstractConfig:97 -  [DUBBO] ReferenceConfig(dubbo://192.168.23.135:20880) is not DESTROYED when FINALIZE, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:13:46   WARN Finalizer com.alibaba.dubbo.config.AbstractConfig:97 -  [DUBBO] ReferenceConfig(dubbo://192.168.23.135:20880) is not DESTROYED when FINALIZE, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:13:46   WARN Finalizer com.alibaba.dubbo.config.AbstractConfig:97 -  [DUBBO] ReferenceConfig(dubbo://192.168.23.135:20880) is not DESTROYED when FINALIZE, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:13:46   WARN Finalizer com.alibaba.dubbo.config.AbstractConfig:97 -  [DUBBO] ReferenceConfig(dubbo://192.168.23.135:20880) is not DESTROYED when FINALIZE, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:13:46   WARN Finalizer com.alibaba.dubbo.config.AbstractConfig:97 -  [DUBBO] ReferenceConfig(dubbo://192.168.23.135:20880) is not DESTROYED when FINALIZE, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:13:46   WARN Finalizer com.alibaba.dubbo.config.AbstractConfig:97 -  [DUBBO] ReferenceConfig(dubbo://192.168.23.135:20880) is not DESTROYED when FINALIZE, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:13:46   WARN Finalizer com.alibaba.dubbo.config.AbstractConfig:97 -  [DUBBO] ReferenceConfig(dubbo://192.168.23.135:20880) is not DESTROYED when FINALIZE, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:13:46   WARN Finalizer com.alibaba.dubbo.config.AbstractConfig:97 -  [DUBBO] ReferenceConfig(dubbo://192.168.23.135:20880) is not DESTROYED when FINALIZE, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:13:46   WARN Finalizer com.alibaba.dubbo.config.AbstractConfig:97 -  [DUBBO] ReferenceConfig(dubbo://192.168.23.135:20880) is not DESTROYED when FINALIZE, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:13:46   WARN Finalizer com.alibaba.dubbo.config.AbstractConfig:97 -  [DUBBO] ReferenceConfig(dubbo://192.168.23.135:20880) is not DESTROYED when FINALIZE, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:13:46   WARN Finalizer com.alibaba.dubbo.config.AbstractConfig:97 -  [DUBBO] ReferenceConfig(dubbo://192.168.23.135:20880) is not DESTROYED when FINALIZE, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:13:46   WARN Finalizer com.alibaba.dubbo.config.AbstractConfig:97 -  [DUBBO] ReferenceConfig(dubbo://192.168.23.135:20880) is not DESTROYED when FINALIZE, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:14:29   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第0列的值是：注册成功 
[crazyapi] 2021/01/29 21:14:29   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第1列的值是：sly1234 
[crazyapi] 2021/01/29 21:14:29   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第2列的值是：123456 
[crazyapi] 2021/01/29 21:14:29   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第3列的值是：username 
[crazyapi] 2021/01/29 21:14:29   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第4列的值是：1 
[crazyapi] 2021/01/29 21:14:29   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第1行第5列的值是：注册成功 
[crazyapi] 2021/01/29 21:14:29   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第0列的值是：用户已存在 
[crazyapi] 2021/01/29 21:14:29   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第1列的值是：sly1234 
[crazyapi] 2021/01/29 21:14:29   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第2列的值是：123456 
[crazyapi] 2021/01/29 21:14:29   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第3列的值是：username 
[crazyapi] 2021/01/29 21:14:29   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第4列的值是：1 
[crazyapi] 2021/01/29 21:14:29   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第2行第5列的值是：账号已存在 
[crazyapi] 2021/01/29 21:14:29   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第3行第0列的值是：用户名为空 
[crazyapi] 2021/01/29 21:14:29  ERROR main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:91 - java.lang.NullPointerException 
[crazyapi] 2021/01/29 21:14:29   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第3行第2列的值是：123456 
[crazyapi] 2021/01/29 21:14:29   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第3行第3列的值是：username 
[crazyapi] 2021/01/29 21:14:29   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第3行第4列的值是：1 
[crazyapi] 2021/01/29 21:14:29   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第3行第5列的值是：账号不能为空 
[crazyapi] 2021/01/29 21:14:29   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第4行第0列的值是：密码为空 
[crazyapi] 2021/01/29 21:14:29   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第4行第1列的值是：sly 
[crazyapi] 2021/01/29 21:14:29  ERROR main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:91 - java.lang.NullPointerException 
[crazyapi] 2021/01/29 21:14:29   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第4行第3列的值是：username 
[crazyapi] 2021/01/29 21:14:29   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第4行第4列的值是：1 
[crazyapi] 2021/01/29 21:14:29   INFO main com.testfan.MavenStudy.apistudy.utils.ExcelUtil:88 - 读取【reg】的第4行第5列的值是：密码不能为空 
[crazyapi] 2021/01/29 21:14:46   INFO DubboShutdownHook com.alibaba.dubbo.config.DubboShutdownHook:56 -  [DUBBO] Run shutdown hook now., dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:14:46   INFO DubboShutdownHook com.alibaba.dubbo.registry.support.AbstractRegistryFactory:64 -  [DUBBO] Close all registries [], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:14:46   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:446 -  [DUBBO] Close dubbo connect: /192.168.23.1:58561-->/192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:14:46   INFO DubboShutdownHook com.alibaba.dubbo.remoting.transport.netty4.NettyChannel:139 -  [DUBBO] Close netty channel [id: 0xefa48f75, L:/192.168.23.1:58561 - R:/192.168.23.135:20880], dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:14:46   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:460 -  [DUBBO] Close dubbo connect: 10.18.224.236:0-->192.168.23.135:20880, dubbo version: 2.6.9, current host: 10.18.224.236 
[crazyapi] 2021/01/29 21:14:46   INFO DubboShutdownHook com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol:63 -  [DUBBO] Destroy reference: dubbo://192.168.23.135:20880/cn.testfan.dubbo.service.MarketService?application=test&dubbo=2.0.2&generic=true&interface=/cn.testfan.dubbo.service.MarketService&pid=46396&register.ip=10.18.224.236&side=consumer&timeout=20000&timestamp=1611926023604&version=1.0, dubbo version: 2.6.9, current host: 10.18.224.236 
